1/04
====

Summary
<header>
<section>
<nav>
<aside>
<main>
<article>

                            Footer
- Footer is a container used to display content at bottom margin of page.
- Typically footer comprises of services, contact details, copyrights etc.

Syntax:
    <footer>
        ... your content ...
    </footer>

                            Address
- It is a container for contact details.
- It keeps your contact details SEO friendly.

Syntax:
    <address>
         ... phone, email, skype etc..
    </address>


CSS Child & Adjacent Selectors:

    nav  span {  }            all span inside nav.

                        <nav>
                            <span></span>            
                            <span> </span>
                        </nav>

    nav + span { }            It refers to span adjacent to nav.    
                        It refers only first element.

                        <nav> </nav>
                        <span> </span>    => only first is accessed with " + "
                        <span> </span>

    nav ~ span { }            It refers to all span elements after nav.

                        <nav> </nav>
                        <span> </span>    => all spans but in same scope
                        <span> </span>



Ex: Shopper Template - Footer


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopper</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        .header-row-1 {
            background-color: #e6e4e4;
            padding: 15px;
            font-family: Arial;
            font-size: 14px;
            display: flex;
            flex-direction: row;
            justify-content: space-between;
        }
        .header-row-1  span {
            padding-left: 10px;
            padding-right: 10px;
        }
        .header-row-2 {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            padding: 40px;
            font-size: 20px;
            font-family: Arial;
        }
        .brand-title {
            font-size: 30px;
            font-weight: bold;
        }
        nav span {
            padding-left: 15px;
            padding-right: 15px;
            font-size: 18px;
        }
        .short-cuts span {
            padding-left: 5px;
            padding-right: 5px;
        }
        article {
            background-color: black;
            color:white;
            padding: 15px;
            text-align: center;
            font-family: Arial;
            font-size: 16px;
        }
        .bi-lightning-fill {
            color:gold;
        }
        main {
            height: 450px;
            display: grid;
            grid-template-columns: 4fr 4fr 4fr;
            margin-top: 10px;
        }
        .women-fashion {
            background-image: url("./images/women-fashion.jpg");
            background-size: cover;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
            opacity: 0.8;
        }
        .men-fashion {
            background-image: url("./images/men-fashion.jpg");
            background-size: cover;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
            opacity: 0.8;
        }
        .kids-fashion {
            background-image: url("./images/kids-fashion.jpg");
            background-size: cover;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
            opacity: 0.8;
        }
        .main-title {
            font-family: Arial;
            font-size: 50px;
            font-weight: bold;
            color:white;
            text-shadow: 2px 2px 2px black;
        }
        .btn-shop {
            background-color: white;
            padding: 10px;
            width: 140px;
            font-family: Arial;
            text-align: center;
            box-shadow: 2px 2px 2px black;
            border-radius: 5px;
        }
        .women-fashion:hover, .men-fashion:hover, .kids-fashion:hover {
            opacity: 1;
            cursor: grab;
        }
        .services {
            display: grid;
            grid-template-columns: 3fr 3fr 3fr 3fr;
            padding: 20px;
            margin-top: 20px;
        }
        .services .bi-truck, .bi-tag, .bi-lock, .bi-arrow-left-right {
            color:red;
        }
        footer {
            background-color: black;
            color:white;
            font-family: Arial;
            padding: 10px;
        }
        .footer-row-1 {
            padding-top: 40px;
            padding-bottom: 40px;
            text-align: center;
        }
        .footer-title {
            font-size: 30px;
            font-weight: bold;
            padding-bottom: 30px;
        }
        .email {
            background-color: rgba(135, 131, 131, 0.653);
            border:1px solid gray;
            padding: 20px;
            display: inline-block;
            width: 300px;
            text-align: left;
        }
        .subscribe {
            background-color: rgb(123, 122, 122);
            padding: 20px;
            width: 150px;
            display: inline-block;
            color:white;
            margin-left: 10px;
        }
        .footer-row-2 {
            margin-top: 30px;
            display: grid;
            grid-template-columns: 2.4fr 2.4fr 2.4fr 2.4fr 2.4fr;
            padding: 20px;
        }
        .service-title {
            font-size: 16px;
            font-weight: bold;
            text-transform: uppercase;
            display: block;
            padding-bottom: 20px;
        }
        .service-title~span {
            display: block;
            padding-bottom: 10px;
        }
        address span {
            display: block;
            padding-bottom: 10px;
        }
        aside span {
            padding-right: 5px;
        }
        .footer-brand-title {
            font-size: 30px;
            font-weight: bold;
            padding-bottom: 20px;
            display: block;
        }
    </style>
</head>
<body>
    <header>
        <div class="header-row-1">
            <div>
                <span class="bi bi-truck"> FREE SHIPPING WORLDWIDE </span>
                <span>United States <span class="bi bi-chevron-down"></span> </span>
                <span>USD <span class="bi bi-chevron-down"></span> </span>
                <span>English <span class="bi bi-chevron-down"></span> </span>
            </div>
            <div>
                <span>Shipping</span>
                <span>FAQ</span>
                <span>Contact</span>
            </div>
            <div>
               <aside>
                <span class="bi bi-facebook"></span>
                <span class="bi bi-twitter"></span>
                <span class="bi bi-instagram"></span>
                <span class="bi bi-youtube"></span>
               </aside>
            </div>
        </div>
        <div class="header-row-2">
            <div>
                <span class="brand-title">Shopper.</span>
            </div>
            <div>
                <nav>
                    <span>Home</span>
                    <span>Catalog</span>
                    <span>Shop</span>
                    <span>Blog</span>
                    <span>Pages</span>
                    <span>Docs</span>
                </nav>
            </div>
            <div class="short-cuts">
                <span class="bi bi-search"></span>
                <span class="bi bi-person"></span>
                <span class="bi bi-heart"></span>
                <span class="bi bi-cart4"></span>
            </div>
        </div>
    </header>
    <section>
        <article>
            <span class="bi bi-lightning-fill"></span>
            <span>HAPPY HOLIDAY DEALS ON EVERYTHING</span>
            <span class="bi bi-lightning-fill"></span>
        </article>
        <main>
            <div class="women-fashion">
                <div class="main-title">Women</div>
                <div class="btn-shop">
                    Shop Women <span class="bi bi-arrow-right"></span>
                </div>
            </div>
            <div class="men-fashion">
                <div class="main-title">Men</div>
                <div class="btn-shop">
                    Shop Men <span class="bi bi-arrow-right"></span>
                </div>
            </div>
            <div class="kids-fashion">
                <div class="main-title">Kids</div>
                <div class="btn-shop">
                    Shop Kids <span class="bi bi-arrow-right"></span>
                </div>
            </div>
        </main>
        <div class="services">
            <div>
                <span class="bi bi-truck">  </span> FREE SHIPPING
            </div>
            <div>
                <span class="bi bi-arrow-left-right">  </span> FREE RETURNS
            </div>
            <div>
                <span class="bi bi-lock">  </span> SECURE SHOPPING
            </div>
            <div>
                <span class="bi bi-tag">  </span> OVER 10,000 STYLES
            </div>
        </div>
    </section>
    <footer>
        <div class="footer-row-1">
                <div class="footer-title">Want style Ideas and Treats?</div>
                <div>
                    <span class="email">Enter Email*</span>
                    <span class="subscribe">Subscribe</span>
                </div>
        </div>
        <div class="footer-row-2">
            <div>
                <span class="footer-brand-title">Shopper.</span>
                <aside>
                    <span class="bi bi-facebook"></span>
                    <span class="bi bi-twitter"></span>
                    <span class="bi bi-instagram"></span>
                    <span class="bi bi-youtube"></span>
                    <span class="bi bi-linkedin"></span>
                </aside>
            </div>
            <div>
                <span class="service-title">Support</span>
                <span>Contact Us</span>
                <span>FAQs</span>
                <span>Size Guide</span>
                <span>Shipping & Returns</span>
            </div>
            <div>
                <span class="service-title">Shop</span>
                <span>Men's Shopping</span>
                <span>Women's Shopping</span>
                <span>Kids' Shopping</span>
                <span>Discounts</span>
            </div>
            <div>
                <span class="service-title">Company</span>
                <span>Our Story</span>
                <span>Careers</span>
                <span>Terms & Conditions</span>
                <span>Privacy & Cookie policy</span>
            </div>
            <div>
                <span class="service-title">CONTACT</span>
                <address>
                    <span>1-202-555-0105</span>
                    <span>1-202-555-0106</span>
                    <span>help@shopper.com</span>
                </address>
            </div>
        </div>
    </footer>
</body>
</html>

Ex: Flipkart footer - layout

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        footer {
            background-color: black;
            color:white;
            font-size: 20px;
            padding: 10px;
            display: grid;
            grid-template-columns: 6fr 6fr;
            height: 300px;
        }
        .left-panel {
            display: grid;
            grid-template-columns: 3fr 3fr 3fr 3fr;
        }
        .right-panel {
            display: grid;
            grid-template-columns: 6fr 6fr;
            border-left: 1px solid white;
            padding-left: 20px;
        }
    </style>
</head>
<body>
    <footer>
        <div class="left-panel">
            <div>Col-1</div>
            <div>Col-2</div>
            <div>Col-3</div>
            <div>Col-4</div>
        </div>
        <div class="right-panel">
            <div>Col-1</div>
            <div>Col-2</div>
        </div>
    </footer>
</body>
</html>

                            Dialog
- It opens a popup window inside page.
- It is used as window with content in backdrop.
- Dialog is default hidden, you have to display with "open" attribute.

Syntax:
      <dialog  open>

          ... your content ...

    </dialog>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        .dialog-header {
            background-color: black;
            color:white;
            padding: 10px;
            display: flex;
            justify-content: space-between;
        }
        dialog {
            width: 300px;
            height: 400px;
            padding: 30px;
            box-shadow: 4px 3px 2px gray;
        }
        .dialog-body {
            height: 250px;
            margin-top:20px;
        }
        .text-area {
            height: 250px;
            border:1px solid gray;
        }
        .dialog-footer {
            margin-top: 50px;
        }
        .btn-post {
            width: 100%;
            background-color: goldenrod;
            color:white;
            padding: 5px;
            text-align: center;
        }
    </style>
</head>
<body>
   
    <dialog open>
        <div class="dialog-header">
            <span>Ask Disha 2.0</span>
            <span class="bi bi-x-lg"></span>
        </div>
        <div class="dialog-body">
            <span>Your Comments</span>
            <div class="text-area">

            </div>
        </div>
        <div class="dialog-footer">
            <div class="btn-post">Post Comment</div>
        </div>
    </dialog>
    Lorem ipsum dolor sit amet consectetur adipisicing elit. Nisi exercitationem ex esse qui dolorem. Inventore, veniam dolores, dolorum at aliquid expedita deleniti dicta maiores sunt fugit vero, id nesciunt dolorem.
    Lorem, ipsum dolor sit amet consectetur adipisicing elit. At dicta sunt cumque accusamus, magnam, mollitia amet neque, dolorem modi eum veritatis. Ipsum, delectus voluptate odit facilis rerum dignissimos ullam ipsam?    
</body>
</html>

Ex: Dialog

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        dialog {
            border:none;
            padding: 0px;
            border-top-left-radius: 20px;
            border-top-right-radius: 20px;
            border-bottom-left-radius: 20px;
            border-bottom-right-radius: 20px;
            width: 500px;
        }
        .dialog-header {
            background-color: orangered;
            color:white;
            height: 100px;
            padding: 20px;
            font-size: 50px;
            font-family: Arial;
            border-radius: 20px;
            display: flex;
            justify-content: space-between;
        }
        .dialog-body {
            background-color: white;
            border-radius: 20px;
            margin-top: -40px;
            padding: 50px;
            font-size: 16px;
            font-family: Arial;
            height: 250px;
        }
        .dialog-footer {
            padding: 20px;
            border-top: 1px solid gray;
            font-size: 14px;
            color:rgb(180, 180, 180);
        }
        body {
            background-color: black;
        }
     </style>
</head>
<body>
    <dialog open>
        <div class="dialog-header">
            <span class="bi bi-person-circle"> <span>Naresh IT</span> </span>
            <span class="bi bi-x-circle-fill"></span>
        </div>
        <div class="dialog-body">
           <div> Naresh IT</div>
           <div>Hello , Good Afternoon</div>
            <div>
                Appear that you are visiting our pages! Can we help you find any suitable course ?
                <br>
                How may I help you ?
            </div>
        </div>
        <div class="dialog-footer">
            <span>Type your message and hit enter</span>
        </div>
    </dialog>
</body>
</html>

2/04
====

Body Semantics and Entities:

1. Line Break                <br>

FAQ: What is difference between <br> & <br /> ?
Ans:  There is no <br /> in HTML.
      <br/> is just a reference given for self ending elements.
      It is required for editor that can't understand void elements.

2. Blank Spaces            &nbsp;     [non-breakable space]

Syntax:
        H &nbsp; &nbsp; T M L


3. Preformatted             <pre>        It keeps the formats as defined in source.


4. Code                    <code>        It makes the block browser friendly.
                                    It defines that content is a code block.

5. Variable                <var>        It is used to mark variables in programming.

6. Sample Text            <samp>        It is used to mark sample output.

7. Large Text                <big>    

8. Smaller Text            <small>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Document</title>
   <style>
      var {
         color:blue;
      }
      samp {
         color:gray;
      }
      .output {
         font-weight: bold;
      }
   </style>
</head>
<body>
   <div>
      normal <small>small</small> <big>Large</big>
   </div>
   <div>
      <code>
         <pre>
          var <var>createCounter</var> = function(n){
             return function(){
               
             };
          };
         </pre>
       </code>
   </div>
   <div>
      <span class="output">Output :</span> <samp> [-2, -1, 0, 1, 2] </samp>
   </div>
</body>
</html>

9. Headings                <h1> to  <h6>


FAQ's:
1. Why you need an heading element, if same styles can be defined without heading?
A. To make the topics in page SEO friendly.

2. Can we modify the default style defined for heading?
A.  Yes.

Syntax:
      h1 {
        font-size : 40px;
        color:red;
       }

3. What are the default styles defined for heading element?
A. Heading element is applied with
    a) font-size
    b) font-weight
    c) display: block

4. How to remove any default style defined for element?
A. By using CSS inheritance value "unset".

Syntax:
        h1 {                                h1 {
              font-size: unset;                     all : unset;
              font-weight:unset;        (or)        }
              display:unset;
        }

Note:
1. Don't use heading to highlight any word or sentence in a paragraph.
2. Don't use too many headings in a page. It may SPAM your page.

3/04
====
- line break        <br>
- blank space        &nbsp;
- pre formatted     <pre>
- code             <code>
- variables        <var>
- sample text        <samp>
- big and small text     <big> <small>
- headings        <h1> ... <h6>

10. Paragraphs & Blockquotes

    <p>                for paragraph
    <blockquote>        summarizing content

- Paragraph element keep the content relative to others topics in a page.
- It provides a container to align and set padding or margin.
- Blockquote is similar to paragraph but it keeps the summary SEO friendly.

Syntax:
    <p align="center">
    <blockquote align="justify">

FAQ's:
1. How to set first-line indent for paragraph?
A. By using CSS "text-indent" attribute.

Syntax:
     p, blockquote {
         text-indent : 100px;
    }

2. How to set spacing between line, words and chars?
A. By using CSS attributes
        a) letter-spacing
        b) word-spacing
        c) line-height  [ line space ]

Syntax:
      p, blockquote {
         letter-spacing : 2px;
           word-spacing : 10px;
         line-height : 50px;
       }


3. How to justify alignment without using text-align?
A. By using CSS "word-break" set to "break-all".

Syntax:
    p, blockquote  {
        word-break : break-all;
    }

4. How to set a drop cap?
A. You can access paragraph first letter by using CSS  "::first-letter" class.
     You can make it dropped by few lines by using "float: left" attribute.

Syntax:
     p ::first-letter {
        font-size: 40px;
            float: left;
        line-height: 40px;
        font-family: Algerian;
     }

5. How to create scrollable paragraph content?
A. By using CSS "overflow" attribute set to "auto or scroll".
    You have to control overflow for content in a container.

Syntax:
     p {
         width : 300px;
         height: 200px;
         padding: 10px;
         border: 2px solid gray;
         overflow: auto;
      }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        blockquote {
            padding-left: 300px;
            padding-right: 300px;
            font-style: italic;
            line-height: 20px;
        }
        blockquote::first-letter {
            font-size: 60px;
            float: left;
            line-height: 40px;
            font-family: Magneto;
            padding-right: 10px;
        }
        .first-para {
            text-indent: 100px;
        }
        h2 {
            letter-spacing: 10px;
            word-spacing: 40px;
        }
        p {
            word-break: break-all;
        }
        .terms {
            width: 500px;
            padding: 10px;
            border:2px solid gray;
            height: 200px;
            overflow: auto;
        }
    </style>
</head>
<body>
   <h2 align="center">Men Fashion</h2>
    <blockquote align="justify">
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Odio repellendus voluptates, unde assumenda modi mollitia tenetur quod laboriosam veritatis quis magni similique expedita, officiis perspiciatis, nobis molestias quia iste ullam? Lorem ipsum dolor sit amet consectetur adipisicing elit. Quo reprehenderit cupiditate molestias ipsum, suscipit doloribus eaque. Nisi suscipit nemo aperiam dolorum, incidunt error fuga repellat quam placeat, dolorem laborum sit.
    </blockquote>
 
    <p class="first-para">
        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Itaque minima perspiciatis similique sapiente! A necessitatibus error quam esse quo doloribus magnam velit deserunt natus aliquam! Ab exercitationem magnam tempora dicta? Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta consectetur quos in quam minus atque possimus, omnis debitis vero, eligendi amet dolorum eaque, magnam magni modi veniam. Soluta, nemo voluptate?
        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Est nulla dignissimos quidem, accusantium minus laboriosam voluptatem odio. Earum ullam consequatur reprehenderit quas nesciunt quos, facere obcaecati, voluptate aliquam animi ad.
    </p>
    <h3>Terms of Service</h3>
    <div class="terms">
        <p>
            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Itaque minima perspiciatis similique sapiente! A necessitatibus error quam esse quo doloribus magnam velit deserunt natus aliquam! Ab exercitationem magnam tempora dicta? Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta consectetur quos in quam minus atque possimus, omnis debitis vero, eligendi amet dolorum eaque, magnam magni modi veniam. Soluta, nemo voluptate?
            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Est nulla dignissimos quidem, accusantium minus laboriosam voluptatem odio. Earum ullam consequatur reprehenderit quas nesciunt quos, facere obcaecati, voluptate aliquam animi ad.
        </p>
        <p>
            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Itaque minima perspiciatis similique sapiente! A necessitatibus error quam esse quo doloribus magnam velit deserunt natus aliquam! Ab exercitationem magnam tempora dicta? Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta consectetur quos in quam minus atque possimus, omnis debitis vero, eligendi amet dolorum eaque, magnam magni modi veniam. Soluta, nemo voluptate?
            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Est nulla dignissimos quidem, accusantium minus laboriosam voluptatem odio. Earum ullam consequatur reprehenderit quas nesciunt quos, facere obcaecati, voluptate aliquam animi ad.
        </p>
       
    </div>
</body>
</html>


6. How to set ellipsis for paragraph?
A. You have to display paragraph content in one line by removing word-wrap.
            {
              white-space: nowrap;
            }
     Hide the overflowing paragraph.
     Set text-overflow to ellipsis.

Syntax:
    p {
         width : 350px;
         border: 1px solid gray;
         white-space: nowrap;
         overflow: hidden;
         text-overflow: ellipsis;
    }

Note: You can set screen-tip for any content in page by using "title" attribute.
      It is a HTML attribute defined for element to display mouse over tips.

        <h1  title="Hyper Text Markup Language"> HTML </h1>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       p {
        width: 350px;
        border:2px solid gray;
        padding: 5px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
       }
    </style>
</head>
<body>
    <h2 title="Hyper Text Markup Language">HTML</h2>
    <p title="Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quis, saepe. Maiores voluptate eveniet natus velit, alias reprehenderit maxime asperiores magnam nulla ipsa perspiciatis dignissimos error qui nostrum quas? Fugiat, laboriosam?">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quis, saepe. Maiores voluptate eveniet natus velit, alias reprehenderit maxime asperiores magnam nulla ipsa perspiciatis dignissimos error qui nostrum quas? Fugiat, laboriosam?</p>
</body>
</html>

7. How to display paragraphs in multiple columns?
A. By using CSS "columns" attribute or CSS display "grid".

    - Display Grid is a disconnected grid system.
    - Columns is a connected grid system. [ the content of one column spans to another column when it reaches the bottom margin of column].
   
        a) columns
        b) column-width
        c) column-gap
        d) column-rule

Syntax:
     .container {
         columns : 5;
         column-gap : 10px;
         column-rule: 1px dotted gray;
      }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .block {
            border:1px solid black;
            padding: 5px;
            font-family: Arial Black;
            font-size: 16px;
            width: 180px;
        }
        .split {
            color:aquamarine;
        }
        .shift {
            color:gray;
        }
        .title {
            font-family: Arial Black;
            font-weight: bold;
            font-size: 18px;
            padding-left: 10px;
        }
        .title-block {
            display: flex;
        }
        .sub-title {
            font-size: 43px;
            font-family: Arial;
        }
        .news {
            columns: 4;
            column-gap: 15px;
            column-rule: 1px dotted gray;
            font-size: 12px;
            text-align: justify;
            margin-top: 20px;
        }
        .news-block {
            box-shadow: 4px 3px 2px black;
            padding: 10px;
            border:1px solid black;
            width: 800px;
        }
    </style>
</head>
<body>
   <div class="news-block">
    <div class="title-block">
        <div class="block">
            <span>SHARP</span>
            <span class="split">|</span>
            <span class="shift">SHIFT</span>
        </div>
        <div class="title">Despite US companies' preferences, Inidian community faces ongoing uncertanity</div>
    </div>
    <div class="sub-title">
        Indian upset over reduces H-1B visa pool
    </div>
    <div class="news">
        <h4>Neeraj Kumar | DC | Delhi</h4>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam libero molestias distinctio cum dolores recusandae provident doloribus reprehenderit quasi ut Lorem ipsum dolor, sit amet consectetur adipisicing elit. Architecto corporis dignissimos molestiae harum dolorem sed temporibus officiis velit culpa. Pariatur quo nesciunt et ipsum sint cumque doloribus ex. Atque, nisi! et, deleniti mollitia laborum nostrum dolorum possimus fugiat in aliquam! Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus reiciendis amet fugit dicta quasi sit facilis exercitationem doloribus quisquam modi non maxime consectetur, iusto itaque laudantium adipisci architecto inventore nisi? Lorem ipsum dolor sit amet consectetur adipisicing elit. Qui assumenda tempore dolor dolorem consectetur saepe harum est, dolorum, molestiae officia veritatis repellendus deserunt mollitia fugit molestias, at vero minus impedit?</p>
        <p>Lorem ipsum dolor Lorem ipsum dolor sit, amet consectetur adipisicing elit. Nam nisi odit nesciunt? Dolore et nulla praesentium quam eligendi expedita eaque corrupti error quia ipsum nam suscipit, incidunt deleniti sequi! Odio. sit amet consectetur adipisicing elit. Pariatur impedit, laudantium in, nam nisi molestias illum magnam repellendus placeat reiciendis velit earum nihil quibusdam soluta sed iste. Doloribus, odio minus? Lorem ipsum dolor sit amet consectetur adipisicing elit. Repudiandae nisi ab aliquid recusandae enim fugiat est quae cum modi dolores. Sit quae, eveniet accusantium eius maiores ipsum nobis minima ab.</p>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Pariatur impedit, laudantium in, nam nisi molestias illum magnam repellendus placeat reiciendis velit earum nihil quibusdam soluta sed iste. Doloribus, odio minus? Lorem ipsum dolor sit amet consectetur adipisicing elit. Repudiandae nisi ab aliquid recusandae enim fugiat est quae cum modi dolores. Sit quae, eveniet accusantium eius maiores ipsum nobis minima ab.</p>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Pariatur impedit, laudantium in, nam nisi molestias illum magnam repellendus placeat reiciendis velit earum nihil quibusdam soluta sed iste. Doloribus, odio minus? Lorem ipsum dolor sit amet consectetur adipisicing elit. Repudiandae nisi ab aliquid recusandae enim fugiat est quae cum modi dolores. Sit quae, eveniet accusantium eius maiores ipsum nobis minima ab.</p>
    </div>
   </div>
</body>
</html>

4/04
====

Lists in HTML

1. Data List with terms and definitions

     <dl>        data list
     <dt>        data term
     <dd>        data definition

Syntax:
    <dl>
       <dt> Term </dt>
       <dd> Definition </dd>
    </dl>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        dt {
            font-weight: bold;
            font-family: Arial;
            background-color: black;
            color:white;
            padding: 4px;
            margin-bottom: 2px;
        }
        dl {
            width: 300px;
        }
        dd {
            padding: 4px;
            margin-bottom: 5px;
            background-color: lightgray;
        }
    </style>
</head>
<body>
    <h2>Web Technologies</h2>
    <dl>
        <dt>HTML</dt>
        <dd>It is a markup language.</dd>
        <dd>It is used for presentation.</dd>
        <dt>JavaScript</dt>
        <dd>It manipulates DOM. </dd>
        <dt>jQuery </dt>
        <dt>Library</dt>
        <dd>It a JavaScript library for DOM. </dd>
    </dl>
</body>
</html>


    - You can split terms and definitions into columns using "display: grid".
    - But for grid style every term can have only one definition.

Syntax:
      dl {
         display: grid;
         grid-template-columns: 3fr 9fr;
       }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        dt {
            font-weight: bold;
            font-family: Arial;
            background-color: black;
            color:white;
            padding: 2px;
            margin-bottom: 2px;
        }
        dl {
            display: grid;
            grid-template-columns: 3fr 9fr;
        }
        dd {
            padding: 2px;
            margin-bottom: 5px;
        }
        .control {
            width: 200px;
            height: 25px;
            background-color: white;
            border:1px solid black;
            padding: 2px;
        }
    </style>
</head>
<body>
    <dl>
        <dt>User Name</dt>
        <dd><div class="control">John</div></dd>
        <dt>Password</dt>
        <dd><div class="control"> **** </div></dd>
        <dt>Date of Birth</dt>
        <dd><div class="control"></div></dd>
        <dt>City</dt>
        <dd><div class="control"></div></dd>
    </dl>
</body>
</html>

CSS Sticky Position:
- It allows the element to scroll along with content.
- It can lock scrolling and stick to page at specified location.

Syntax:
     element {
        position: sticky;
        top:0px;
     }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        nav {
            width: 150px;
        }
        dt {
            font-weight: bold;
            background-color: black;
            color:white;
            padding: 2px;
            margin-bottom: 10px;
            position: sticky;
            top: 0px;
        }
        dd {
            background-color: gray;
            color:white;
            padding: 2px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <nav>
        <dl>
            <h2>Amazon</h2>
            <dt>Electronics</dt>
            <dd>Televisions</dd>
            <dd>Mobiles</dd>
            <dd>Watches</dd>
            <dd>Televisions</dd>
            <dd>Mobiles</dd>
            <dd>Watches</dd>
            <dd>Televisions</dd>
            <dd>Mobiles</dd>
            <dd>Watches</dd>
            <dd>Televisions</dd>
            <dd>Mobiles</dd>
            <dd>Watches</dd>
            <dd>Televisions</dd>
            <dd>Mobiles</dd>
            <dd>Watches</dd>
            <dd>Televisions</dd>
            <dd>Mobiles</dd>
            <dd>Watches</dd>
            <dd>Televisions</dd>
            <dd>Mobiles</dd>
            <dd>Watches</dd>
            <dt>Fashion</dt>
            <dd>Kids</dd>
            <dd>Women</dd>
            <dd>Men</dd>
            <dd>Kids</dd>
            <dd>Women</dd>
            <dd>Men</dd>
            <dd>Kids</dd>
            <dd>Women</dd>
            <dd>Men</dd>
            <dd>Kids</dd>
            <dd>Women</dd>
            <dd>Men</dd>
            <dd>Kids</dd>
            <dd>Women</dd>
            <dd>Men</dd>
            <dd>Kids</dd>
            <dd>Women</dd>
            <dd>Men</dd>
            <dd>Kids</dd>
            <dd>Women</dd>
            <dd>Men</dd>
            <dd>Kids</dd>
            <dd>Women</dd>
            <dd>Men</dd>
            <dd>Kids</dd>
            <dd>Women</dd>
            <dd>Men</dd>
            <dt>Footwear</dt>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>
            <dd>Casuals</dd>
            <dd>Sneakers</dd>
            <dd>Boots</dd>

        </dl>
    </nav>
</body>
</html>

2. Ordered List
- It sets auto numbering for a list of items.
- Numbering updates automatically when you add or remove item.

    <ol>            Ordered list
    <li>            List item

Syntax:
    <ol>
       <li>Item-1</li>            1. Item-1
       <li>Item-2</li>            2. Item-2
    </ol>

- You can change the numbering style by using "type" attribute set with
  "1, A, a, i, I".

Syntax:
        <ol type="A">
        <ol type="i">
        <ol>                => default type is 1.

- You can set startup numbering level using "start" attribute.
- It refers to level number to start with. It is always a number value.


Syntax:
        <ol type="1" start="5">
        <ol type="A" start="5">
        <ol type="i"  start="5">

- You can use "reversed" attribute to set reverse numbering order.
- It will not reverse the items, it just reverse order of numbering.

Syntax:
        <ol type="1" reversed>
        <ol type="a" reversed>

- You can create a nested numbering list.
- But make sure that the child list is inside <li> Element.
  [not below the  <li> element]

Syntax: Bad Code

        <li> Parent </li>
          <ol>
              <li> Child </li>
          </ol>

Syntax: Good Code

        <li> Parent
            <ol>
               <li>Child</li>
            </ol>
        </li>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <ol type="1">
        <li>HTML
            <ol type="a">
                <li>Semantic Elements
                    <ol type="i">
                        <li>Heading</li>
                        <li>Header</li>
                    </ol>
                </li>
                <li>Generic Elements</li>
            </ol>
        </li>
        <li>JavaScript
            <ol type="a">
                <li>Variables</li>
                <li>Data Types</li>
            </ol>
        </li>
    </ol>
</body>
</html>

FAQ's:
1. How to display the list items side by side?
A. By using display attribute set to "flex" for list not list item.

Syntax:
    ol {
        display : flex;
     }

     As default direction is row. It keeps elements side by side.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
          .child-list {
            display: flex;
            flex-direction: row;
            margin-top: 10px;
        }
        li {
            margin-left: 20px;
            margin-right: 20px;
        }
    </style>
</head>
<body>
    <ol type="1">
        <li>__________ elements doesn't require end token.
            <ol type="a" class="child-list">
                <li>Normal</li>
                <li>RC Data</li>
                <li>Void</li>
                <li>Raw Text</li>
            </ol>
        </li>
    </ol>
</body>
</html>


2. How to display list items in multiple columns?
A. By using Grid style or by using columns.

Syntax:
        ol {
            display: grid;
            grid-template-columns: 6fr 6fr;
         }

        ol {
            columns : 2;
        }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
          .child-list {
            columns: 2;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <ol type="1">
        <li>__________ elements doesn't require end token.
            <ol type="a" class="child-list">
                <li>Normal</li>
                <li>RC Data</li>
                <li>Void</li>
                <li>Raw Text</li>
            </ol>
        </li>
    </ol>
</body>
</html>

3. How to remove numbering for list items?
A. By using CSS "list-style" attribute set to "none".

Syntax:
    ol {
         list-style : none;
    }

CSS  Before & After Selectors:

        ::before            It keeps a content before specified item
        ::after            It keeps content after specified item

Syntax:
     element :: before {
           content : " any ";
     }

Ex: Breadcrumb Design

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       ol {
          list-style: none;
          display: flex;
       }
       li::after {
          content: " > ";
          padding-left: 5px;
          color:gray;
       }
       li::before {
          content: " ";
          padding-right: 5px;
       }
    </style>
</head>
<body>
    <nav>
        <ol>
            <li>Home</li>
            <li>Mobiles & Accessories</li>
            <li>Mobiles</li>
            <li>Apple Mobile</li>
            <li>Apple 16</li>
        </ol>
    </nav>
</body>
</html>

05/04
=====

Unordered List:
 - It is a bulleted list.
 - List items are defined with a bullet symbol.
 - It supports bullet with type as "circle, disc & square".

    <ul>            Unordered List
    <li>            List Item

Syntax:
    <ul>
      <li> Item-1 </li>
      <li> Item-2 </li>
    </ul>

    <ul type="circle | disc | square">
    </ul>

FAQ: How to set custom bullet symbol?
Ans:  You can use bootstrap icons or you can set custom image by using the CSS      
      attribute "list-style-image".

Syntax:
         <li  class="bi bi-house"> Home </li>

Syntax:
       ul {
         list-style: none;
         list-style-image: url("./image/pic.gif");
      }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        ul {
            list-style: none;
            list-style-image: url("./images/bullet.gif");
            font-size: 30px;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
</head>
<body>
   <ul>
     <li> HTML</li>
     <li> CSS</li>
     <li> JavaScript </li>
   </ul>
</body>
</html>




Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        ul {
            list-style: none;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
</head>
<body>
    <ul>
        <li class="bi bi-person-fill"> Sign In </li>
        <li class="bi bi-gift"> Offers </li>
        <li class="bi bi-translate"> Language </li>
        <li class="bi bi-envelope-fill"> Email </li>
    </ul>
    <ul>
        <li class="bi bi-tag-fill">Axis Bank Offer 20% OFF</li>
        <li class="bi bi-tag-fill">HDFC Bank Offer 100 Cash Back</li>
        <li class="bi bi-tag-fill">IDFC zero cost EMI Offer</li>
    </ul>
</body>
</html>

FAQ: Can we set bullet symbol for ordered list and vice versa?
Ans: Yes. By using CSS attribute "list-style-type" you can change symbol to number or
    vice versa.

Syntax:
    ol {
         list-style-type : circle;
    }

    ul {
       list-style-type : decimal | lower-alpha | any ;
    }

Note: You can configure a nested list with combination of Ordered and Unordered

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
</head>
<body>
   <ul>
     <li> HTML
          <ol type="a">
             <li>Normal Elements</li>
             <li>Void Elements</li>
          </ol>
     </li>
     <li> CSS</li>
     <li> JavaScript </li>
   </ul>
</body>
</html>

                           Details & Summary

- Details is a container with expandable and collapsible content.
- Summary is a caption of details container.

Syntax:
    <details>
        <summary> Caption </summary>
        .... your content....
    </details>

- If you want the details to keep open the content then apply "open" attribute.

Syntax:
    <details open>
   
Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        details div {
            margin-left: 20px;
            margin-bottom: 10px;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <details>
          <summary> Need Help in Sign in? </summary>
          <div>Forgot Password</div>
          <div>Recover Id</div>
          <div>Other Issues</div>
    </details>
    <details open>
        <summary>Electronics</summary>
        <div>Televisions</div>
        <div>Mobiles</div>
        <div>Watches</div>
    </details>
</body>
</html>

                         Fieldset & Legend

- Fieldset is a container with frame.
- It is used to keep relative content together.
- Legend is a caption set of fieldset.

Syntax:
    <fieldset>
        <legend> Caption </legend>
        .... your content....
    </fieldset>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       .control {
          border:1px solid black;
          width: 200px;
          height: 22px;
          margin-bottom: 5px;
          background-color: white;
       }
       dl {
        display: grid;
        grid-template-columns: 2fr 8fr;
       }
       fieldset {
         margin: 20px;
         width: 500px;
         box-shadow: 4px 4px 4px black;
         background-color: rgb(200, 238, 238);
         border-radius: 10px;
       }
       legend {
         background-color:rgb(1, 113, 113);
         color:white;
         padding: 4px;
         width: 130px;
         text-align: center;
         border-radius: 10px;
         box-shadow: 2px 2px 2px gray;
       }
    </style>
</head>
<body>
     <fieldset>
        <legend>Personal Details</legend>
        <dl>
            <dt>First Name</dt>
            <dd class="control"></dd>
            <dt>Last Name</dt>
            <dd class="control"></dd>
            <dt>Date of Birth</dt>
            <dd class="control"></dd>
         </dl>
     </fieldset>
     <fieldset>
        <legend>Contact Details</legend>
        <dl>
            <dt>City</dt>
            <dd class="control"></dd>
            <dt>State</dt>
            <dd class="control"></dd>
            <dt>Postal Code</dt>
            <dd class="control"></dd>
         </dl>
     </fieldset>
</body>
</html>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        fieldset {
            width: 400px;
            text-align: center;
            border-right: none;
            border-left: none;
            border-bottom: none;
        }
        legend {
            padding-left: 10px;
            padding-right: 10px;
        }
        .btn-create {
            margin-top: 20px;
            border:1px solid gray;
            width: 400px;
            text-align: center;
            border-radius: 20px;
            padding: 10px;
        }
    </style>
</head>
<body>
    <fieldset>
         <legend> New to Amazon? </legend>
         <div class="btn-create">Create new Account</div>
    </fieldset>
</body>
</html>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body {
            background-color: lightgray;
        }
        fieldset {
            background-color: white;
            height: 300px;
            border-radius: 50px;
            margin-top: 100px;
        }
        legend {
            text-align: center;
            width: 80%;
            padding: 30px;
            height: 40px;
            border: 1px solid gray;
            background-color: white;
            border-radius: 50px;
            display: flex;
            justify-content: space-around;
            box-shadow: 5px 5px 2px black;
        }
        legend span {
            font-size: 50px;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
</head>
<body>
    <fieldset>
          <legend>
            <span class="bi bi-airplane"></span>
            <span class="bi bi-train-lightrail-front-fill"></span>
            <span class="bi bi-bus-front"></span>
            <span class="bi bi-umbrella"></span>
          </legend>
    </fieldset>
</body>
</html>

                        HTML Horizontal Line
- It is defined using <hr> element.
- It is a horizontal line with size and color.

Syntax:
    <hr size="10" noshade  color="red"  width="50%">

    size        : thickness of line
    noshade    : allows to set color for line.

07/04
=====

Details & Summary
Fieldset & Legend
Order and Unordered List
Data List
HR Line

                         Text Formatting in HTML
1. Font
 - It allows to configure a face, size & color for text.
 
    face        : It refers to font family name.

    size        : It refers to level number 1 to 7.

    color    : It refers color name, shade or hexadecimal code.

Syntax:
    <font face="Arial"  size="6"  color="#ff00ff">  Your Text </font>

FAQ's:
1. Why the size is only 7, what it refers to ?
A. It refers to Level number, which represents default sizes like
        small
        normal
        large
        x-large
        xx-large
        xxx-large etc.

2. What are web safe fonts?
A. They refer to default fonts available across all devices.
     The web safe fonts are
        a) Serif
        b) Sans Serif
        c) Monospace

Note: Don't use <font> element in modern web design. It is recommended to use
      CSS styles.

2. Text Styles & Effects

        Bold            <b>
        Strong        <strong>
        Italics        <i>
        Emphasized    <em>
        Underline    <u>
        Inserted         <ins>
        Strikeout         <strike>
        Deleted        <del>
        Super Script    <sup>
        Sub Script    <sub>

FAQ: What is difference between <b> & <strong> ?
Ans:   HTML provides different elements for documentation.
      The elements are categorized into
        a) Design Mode
        b) Review Mode
      The Review mode elements are
        <em>
        <strong>
        <ins>
        <del>
     You have to avoid them while going live. [production]
     The design mode elements are
        <i>
        <b>
        <u>
        <strike>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div>Font <b>Bold</b> is similar to <strong>Strong</strong> </div>
    <div>Font <i>Italics</i> is similar to <em>Emphasized</em> </div>
    <div>Text <u>Underline</u> is similar to <ins>Inserted</ins> </div>
    <div>Text <strike>Strikeout</strike> is similar to <del>Deleted</del> </div>
    <div> 5<sup>th</sup> Anniversary </div>
    <div> H<sub>2</sub>O </div>
</body>
</html>



CSS Text Styles

        font-family        : font face
        font-size            : text size
        font-weight        : bold
        font-style            : italics
        text-decoration    : underline, overline, line-through
                          [line style, color & size]

Syntax:
    h1 {
        text-decoration: underline dotted 2px black;
    }

Ex:
Flipkart-Mobile

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flipkart</title>
    <style>
        body {
            display: grid;
            grid-template-columns: 3fr 9fr;
            padding-top: 30px;
        }
        .rating {
            background-color: green;
            color:white;
            padding: 5px;
            border-radius: 5px;
        }
        ul {
            list-style: none;
            margin-left: -40px;
        }
        li {
            line-height: 30px;
            color:green;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
</head>
<body>
    <div>

    </div>
    <div>
        <div> <font size="5" face="Arial">Apple 16 (White 128 GB)</font> </div>
        <br>
        <div>
            <font face="Arial"><span class="rating">4.6<span class="bi bi-star-fill"></span></span></font>
            <font color="gray" face="Arial" size="4"><b> 2,500 ratings & 300 reviews </b></font>
        </div>
        <br>
        <div>
            <font size="6" face="Arial"><b>&#8377; 6,242/month</b></font>
            <br><br>
            <div>
                <font face="Arial">12 months No Cost EMI Plan with Bajaj Finserv</font>
                <font color="blue" face="Arial">Details</font>
            </div>
            <br><br>
            <font face="Arial" color="green"> <b>Extra &#8377; 5,000 Off</b> </font>
            <br><br>
            <font face="Arial" size="5"><b> &#8377; 74,900</b> <font color="gray"><strike>&#8377; 79,900/-</strike></font> </font>
        </div>
        <div>
            <h4><font face="Arial">Available Offers</font></h4>
            <font face="Arial">
                <ul>
                    <li class="bi bi-tag-fill">  <font color="gray"><b>Bank Offer5%</b> Unlimited Cashback on Flipkart Axis Bank Credit Card</font> </li>
                    <li class="bi bi-tag-fill">  <font color=gray><b>Bank Offer </b> ₹2500 Off On Flipkart Axis Bank Credit Card Non EMI Transactions</font> </li>
                    <li class="bi bi-tag-fill">  <font color="gray"><b>Bank Offer</b> ₹4000 Off On Axis Bank Credit Card Transactions.</font> </li>
                    <li class="bi bi-tag-fill">  <font color="gray"><b>Special Price</b> Get extra ₹5000 off (price inclusive of cashback/coupon)</font> </li>
                </ul>
            </font>
        </div>
    </div>
</body>
</html>
                        Images in HTML

8/04
====
Images in HTML
- Images are of various types.
- Web will not support all types of images.
- The recommended images types for web are:

Type                                    MIME                Extension
---------------------------------------------------------------------------------------------------------------------

PNG [ Portable Network Graphics]            image/png            .png

APNG [ Animated Portable Network Graphics]    image/apng            .apng

JPEG [Joint Photographic Expert Group]        image/jpeg            .jpg, .jpeg, .jfif

AVIF [ AV1 Image Format]                     image/avif            .avif, .heif

GIF    [ Graphic Interchange Format]             image/gif                .gif

TIFF [ Tagged Image File Format]                image/tiff                .tiff

BMP [Bitmap]                                image/bmp            .bmp

ICON [Microsoft Icon]                        image/icon            .ico

SVG [Scalar Vector Graphics]                application/xml        .svg

WebP [Web Picture]                        application/webp        .webp


FAQ: What is MIME?
Ans:  Multipurpose Internet Mail Extension
     It refers the file content type.
     A browser can understand the content type of a file by using its MIME.
     
Note: Every MIME refers to multiple extensions.

        .jpg, .jpeg, .jfif     => image/jpeg

PNG & APNG
- High Definition
- High Pixel Depth
- More Colors
- Requires more memory
- APNG can be animated
- Always use PNG for downloadable images.
- Don't use them for on screen presentation.

JPEG
- High Definition
- Less pixel depth when compared to PNG
- More colors
- It is compressed image format.
- Requires less memory
- It is good for on-screen presentation.

AVIF
- Similar to JPG
- 50% more compressed than JPG
- They not supported across all browsers.
- They compatibility issues.
- They use HEIF. [High Efficiency Image Format]
- Less memory and fast in loading.

GIF
- Less colors
- It supports only 256 colors.
- Size is same as its original format.
- They are good for  logos, bullets, buttons, patterns, borders etc.
- It can be animated.

TIFF
- It is a sliced image format.
- It is high definition & quality
- It uses more memory.
- It loads sliced image portion on web page.
- It is good for scanned documents.


SVG
- Scalar Vector Graphics
- Vector Graphics is not a pixel based image.
- It uses XML as language.
- It is good for Maps, Architectural diagrams, icons etc.


Bitmap
- It is a binary image format.
- It is good for storing in any database or  data store.
- It is also good in transporting via network.
- However it require COM to Marshal [Common Object Model] the content.
- It is blocked by firewalls.


WebP
- It is embedded image into page.
- It will not allow to separate image from page.
- It a secured image in page.


Embed Image in Page:
1. You can use <img> element to embed images.

2. To keep image SEO friendly you can enclose image in <Figure> element with
    <Figcaption>

Syntax:    
    <figure>
        <img>
        <figcaption> Title </figcaption>
    </figure>


9/04
====
Image Attributes:
    1. src            : It refers to the image name and path.

    2. width & height    : sets height and width for image. You can use pixels or %.
                      Size in % makes image fluid.
    3. alt            : It defines the alternative text to display when image fails to load.
4. title            : It defines the text to display when mouse is over image.

Syntax:
 <img src="./images/pic.jpg"  alt="alternative text"  title="screen tips">

5. border            : It sets border for image by specified pixels.

6. align            : It aligns image left or right. It is used for wrapping text around image

7. hspace        : It sets horizontal padding between text and image

8. vspace         : It set vertical padding between text and image

Syntax:
  <img src="./images/pic.jpg"  align="left" hspace="20" vspace="20">

9. crossorigin         : It refers to CORS [Cross Origin Resource Sharing].
                  It can restrict accessibility of image by using various authentication
                  techniques.

                       a) anonymous
                    b) use-credentials

Syntax:
  <img src="some_path"  crossorigin="use-credentials">


10. decoding         : It defines how image can load along with other content in page.

                    a) sync
                    b) async
                    c) auto

Syntax:
  <img src="path"  decoding="async | sync | auto">


11. importance     : It sets priority for image. You can load according to priority.
                    a) low
                    b) high
                    c) auto

Syntax:
   <img src="path"  importance="low | high | auto">

12. loading        : It defines the loading technique for image, which can be
                    a) eager
                    b) lazy
                  Lazy loading is a technique of loading only when required.

Syntax:
   <img src="path"  loading="lazy | eager">


13. srcset        : It configure a set of images for element.
                  It requires styles to rotate images according to state and situation.


Syntax:
   <img  srcset="collection_of_images">


Ex: Cards Design - Naresh IT cards

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Naresh IT</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        .card {
            width: 250px;
            margin: 20px;
            border-radius: 10px;
            border:1px solid gray;
            box-shadow: 2px 2px 2px black;
            font-family: Arial;
        }
        .card-img {
            width: 100%;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            height: 150px;
        }
        .card-header {
          height: 150px;
        }
        .card-body {
            padding: 20px;
        }
        .card-title {
            text-align: center;
            font-size: 22px;
            font-weight: bold;
        }    
        .rating {
            text-align: center;
            color:goldenrod;
            padding-top: 20px;
        }
        ul {
            list-style: none;
            margin-left: -40px;
        }
        li {
            line-height: 30px;
        }
        .card-footer {
            display: grid;
            grid-template-columns: 6fr 6fr;
            text-align: center;
        }
        .btn-enroll {
            background-color: blue;
            color:white;
            padding: 10px;
            border-bottom-left-radius: 10px;
        }
        .btn-share {
            background-color: whitesmoke;
            padding: 10px;
            border-bottom-right-radius: 10px;
        }
        section {
            display: flex;
            flex-direction: row;
        }
    </style>
</head>
<body>
   <section>
      <div class="card">
         <div class="card-header">
            <img src="./images/power-bi.png" class="card-img">
         </div>
         <div class="card-body">
            <div>
                <div class="card-title">Power PI</div>
                <div class="rating">
                    <span class="bi bi-star-fill"></span>
                    <span class="bi bi-star-fill"></span>
                    <span class="bi bi-star-fill"></span>
                    <span class="bi bi-star-fill"></span>
                    <span class="bi bi-star-fill"></span>
                </div>
            </div>
            <div>
                <ul>
                    <li class="bi bi-calendar-date"> <span>Start Date</span> <span>:</span> <span>10 Apr 2025</span> </li>
                    <li class="bi bi-person"> <span>By</span> <span>:</span> <span>Mr.Someone</span> </li>
                    <li class="bi bi-clock"> <span>Duration</span> <span>:</span> <span> 60 Days </span> </li>
                </ul>
            </div>
         </div>
         <div class="card-footer">
            <div class="btn-enroll">
                Enroll
            </div>
            <div class="btn-share">
               <span class="bi bi-share"></span> Share
            </div>
         </div>
      </div>


      <div class="card">
        <div class="card-header">
           <img src="./images/python.png" class="card-img">
        </div>
        <div class="card-body">
           <div>
               <div class="card-title">Python</div>
               <div class="rating">
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
               </div>
           </div>
           <div>
               <ul>
                   <li class="bi bi-calendar-date"> <span>Start Date</span> <span>:</span> <span>10 Apr 2025</span> </li>
                   <li class="bi bi-person"> <span>By</span> <span>:</span> <span>Mr.Someone</span> </li>
                   <li class="bi bi-clock"> <span>Duration</span> <span>:</span> <span> 60 Days </span> </li>
               </ul>
           </div>
        </div>
        <div class="card-footer">
           <div class="btn-enroll">
               Enroll
           </div>
           <div class="btn-share">
              <span class="bi bi-share"></span> Share
           </div>
        </div>
     </div>

     <div class="card">
        <div class="card-header">
           <img src="./images/react.png" class="card-img">
        </div>
        <div class="card-body">
           <div>
               <div class="card-title">React JS</div>
               <div class="rating">
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
               </div>
           </div>
           <div>
               <ul>
                   <li class="bi bi-calendar-date"> <span>Start Date</span> <span>:</span> <span>10 Apr 2025</span> </li>
                   <li class="bi bi-person"> <span>By</span> <span>:</span> <span>Mr.Someone</span> </li>
                   <li class="bi bi-clock"> <span>Duration</span> <span>:</span> <span> 60 Days </span> </li>
               </ul>
           </div>
        </div>
        <div class="card-footer">
           <div class="btn-enroll">
               Enroll
           </div>
           <div class="btn-share">
              <span class="bi bi-share"></span> Share
           </div>
        </div>
     </div>

     <div class="card">
        <div class="card-header">
           <img src="./images/data sci.png" class="card-img">
        </div>
        <div class="card-body">
           <div>
               <div class="card-title">Data Science</div>
               <div class="rating">
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
               </div>
           </div>
           <div>
               <ul>
                   <li class="bi bi-calendar-date"> <span>Start Date</span> <span>:</span> <span>10 Apr 2025</span> </li>
                   <li class="bi bi-person"> <span>By</span> <span>:</span> <span>Mr.Someone</span> </li>
                   <li class="bi bi-clock"> <span>Duration</span> <span>:</span> <span> 60 Days </span> </li>
               </ul>
           </div>
        </div>
        <div class="card-footer">
           <div class="btn-enroll">
               Enroll
           </div>
           <div class="btn-share">
              <span class="bi bi-share"></span> Share
           </div>
        </div>
     </div>
   </section>  
</body>
</html>

Ex: Podcast cards

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        .card {
            width: 400px;
            border:1px solid gray;
            box-shadow: 3px 3px 2px black;
            border-radius: 5px;
            margin: 20px;
            display: grid;
            grid-template-columns: 6fr 6fr;
            height: 200px;
        }
        .card-img {
            height: 200px;
            border-top-right-radius: 5px;
            border-bottom-right-radius: 5px;
        }
        .card-header {
            text-align: center;
            padding: 20px;
            font-family: Arial;
        }

        .card-title {
            font-size: 30px;
            padding-top: 10px;
            padding-bottom: 30px;
        }
        .bi-chevron-bar-left {
            font-size: 25px;
        }
        .bi-chevron-bar-right {
            font-size: 25px;
        }
        .bi-play-fill {
            font-size: 50px;
        }
        .controls {
            display: flex;
            justify-content: center;
            align-items: center;
        }
    </style>
</head>
<body>
   <div class="card">
       <div class="card-header">
            <div class="card-title">Arjit Singh</div>
            <div class="controls">
                <span class="bi bi-chevron-bar-left"></span>
                <span class="bi bi-play-fill"></span>
                <span class="bi bi-chevron-bar-right"></span>
            </div>
       </div>
       <div class="card-body">
          <img src="./images/arjitsingh.jpg" class="card-img">
       </div>
   </div>

   <div class="card">
    <div class="card-header">
         <div class="card-title">Arjit Singh</div>
         <div class="controls">
             <span class="bi bi-chevron-bar-left"></span>
             <span class="bi bi-play-fill"></span>
             <span class="bi bi-chevron-bar-right"></span>
         </div>
    </div>
    <div class="card-body">
       <img src="./images/arjitsingh.jpg" class="card-img">
    </div>
</div>
</body>
</html>

10/04
====
Image Attributes
1. src
2. width & height
3. alt            : It defines the alternative text to display when image fails to load.
4. title            : It defines the text to display when mouse is over image.

Syntax:
 <img src="./images/pic.jpg"  alt="alternative text"  title="screen tips">

5. border            : It sets border for image by specified pixels.

6. align            : It aligns image left or right. It is used for wrapping text around image

7. hspace        : It sets horizontal padding between text and image

8. vspace         : It set vertical padding between text and image

Syntax:
  <img src="./images/pic.jpg"  align="left" hspace="20" vspace="20">

9. crossorigin         : It refers to CORS [Cross Origin Resource Sharing].
                  It can restrict accessibility of image by using various authentication
                  techniques.

                       a) anonymous
                    b) use-credentials

Syntax:
  <img src="some_path"  crossorigin="use-credentials">


10. decoding         : It defines how image can load along with other content in page.

                    a) sync
                    b) async
                    c) auto

Syntax:
  <img src="path"  decoding="async | sync | auto">


11. importance     : It sets priority for image. You can load according to priority.
                    a) low
                    b) high
                    c) auto

Syntax:
   <img src="path"  importance="low | high | auto">

12. loading        : It defines the loading technique for image, which can be
                    a) eager
                    b) lazy
                  Lazy loading is a technique of loading only when required.

Syntax:
   <img src="path"  loading="lazy | eager">


13. srcset        : It configure a set of images for element.
                  It requires styles to rotate images according to state and situation.


Syntax:
   <img  srcset="collection_of_images">


Ex: Cards Design - Naresh IT cards

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Naresh IT</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        .card {
            width: 250px;
            margin: 20px;
            border-radius: 10px;
            border:1px solid gray;
            box-shadow: 2px 2px 2px black;
            font-family: Arial;
        }
        .card-img {
            width: 100%;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            height: 150px;
        }
        .card-header {
          height: 150px;
        }
        .card-body {
            padding: 20px;
        }
        .card-title {
            text-align: center;
            font-size: 22px;
            font-weight: bold;
        }    
        .rating {
            text-align: center;
            color:goldenrod;
            padding-top: 20px;
        }
        ul {
            list-style: none;
            margin-left: -40px;
        }
        li {
            line-height: 30px;
        }
        .card-footer {
            display: grid;
            grid-template-columns: 6fr 6fr;
            text-align: center;
        }
        .btn-enroll {
            background-color: blue;
            color:white;
            padding: 10px;
            border-bottom-left-radius: 10px;
        }
        .btn-share {
            background-color: whitesmoke;
            padding: 10px;
            border-bottom-right-radius: 10px;
        }
        section {
            display: flex;
            flex-direction: row;
        }
    </style>
</head>
<body>
   <section>
      <div class="card">
         <div class="card-header">
            <img src="./images/power-bi.png" class="card-img">
         </div>
         <div class="card-body">
            <div>
                <div class="card-title">Power PI</div>
                <div class="rating">
                    <span class="bi bi-star-fill"></span>
                    <span class="bi bi-star-fill"></span>
                    <span class="bi bi-star-fill"></span>
                    <span class="bi bi-star-fill"></span>
                    <span class="bi bi-star-fill"></span>
                </div>
            </div>
            <div>
                <ul>
                    <li class="bi bi-calendar-date"> <span>Start Date</span> <span>:</span> <span>10 Apr 2025</span> </li>
                    <li class="bi bi-person"> <span>By</span> <span>:</span> <span>Mr.Someone</span> </li>
                    <li class="bi bi-clock"> <span>Duration</span> <span>:</span> <span> 60 Days </span> </li>
                </ul>
            </div>
         </div>
         <div class="card-footer">
            <div class="btn-enroll">
                Enroll
            </div>
            <div class="btn-share">
               <span class="bi bi-share"></span> Share
            </div>
         </div>
      </div>


      <div class="card">
        <div class="card-header">
           <img src="./images/python.png" class="card-img">
        </div>
        <div class="card-body">
           <div>
               <div class="card-title">Python</div>
               <div class="rating">
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
               </div>
           </div>
           <div>
               <ul>
                   <li class="bi bi-calendar-date"> <span>Start Date</span> <span>:</span> <span>10 Apr 2025</span> </li>
                   <li class="bi bi-person"> <span>By</span> <span>:</span> <span>Mr.Someone</span> </li>
                   <li class="bi bi-clock"> <span>Duration</span> <span>:</span> <span> 60 Days </span> </li>
               </ul>
           </div>
        </div>
        <div class="card-footer">
           <div class="btn-enroll">
               Enroll
           </div>
           <div class="btn-share">
              <span class="bi bi-share"></span> Share
           </div>
        </div>
     </div>

     <div class="card">
        <div class="card-header">
           <img src="./images/react.png" class="card-img">
        </div>
        <div class="card-body">
           <div>
               <div class="card-title">React JS</div>
               <div class="rating">
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
               </div>
           </div>
           <div>
               <ul>
                   <li class="bi bi-calendar-date"> <span>Start Date</span> <span>:</span> <span>10 Apr 2025</span> </li>
                   <li class="bi bi-person"> <span>By</span> <span>:</span> <span>Mr.Someone</span> </li>
                   <li class="bi bi-clock"> <span>Duration</span> <span>:</span> <span> 60 Days </span> </li>
               </ul>
           </div>
        </div>
        <div class="card-footer">
           <div class="btn-enroll">
               Enroll
           </div>
           <div class="btn-share">
              <span class="bi bi-share"></span> Share
           </div>
        </div>
     </div>

     <div class="card">
        <div class="card-header">
           <img src="./images/data sci.png" class="card-img">
        </div>
        <div class="card-body">
           <div>
               <div class="card-title">Data Science</div>
               <div class="rating">
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
                   <span class="bi bi-star-fill"></span>
               </div>
           </div>
           <div>
               <ul>
                   <li class="bi bi-calendar-date"> <span>Start Date</span> <span>:</span> <span>10 Apr 2025</span> </li>
                   <li class="bi bi-person"> <span>By</span> <span>:</span> <span>Mr.Someone</span> </li>
                   <li class="bi bi-clock"> <span>Duration</span> <span>:</span> <span> 60 Days </span> </li>
               </ul>
           </div>
        </div>
        <div class="card-footer">
           <div class="btn-enroll">
               Enroll
           </div>
           <div class="btn-share">
              <span class="bi bi-share"></span> Share
           </div>
        </div>
     </div>
   </section>  
</body>
</html>

Ex: Podcast cards

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        .card {
            width: 400px;
            border:1px solid gray;
            box-shadow: 3px 3px 2px black;
            border-radius: 5px;
            margin: 20px;
            display: grid;
            grid-template-columns: 6fr 6fr;
            height: 200px;
        }
        .card-img {
            height: 200px;
            border-top-right-radius: 5px;
            border-bottom-right-radius: 5px;
        }
        .card-header {
            text-align: center;
            padding: 20px;
            font-family: Arial;
        }

        .card-title {
            font-size: 30px;
            padding-top: 10px;
            padding-bottom: 30px;
        }
        .bi-chevron-bar-left {
            font-size: 25px;
        }
        .bi-chevron-bar-right {
            font-size: 25px;
        }
        .bi-play-fill {
            font-size: 50px;
        }
        .controls {
            display: flex;
            justify-content: center;
            align-items: center;
        }
    </style>
</head>
<body>
   <div class="card">
       <div class="card-header">
            <div class="card-title">Arjit Singh</div>
            <div class="controls">
                <span class="bi bi-chevron-bar-left"></span>
                <span class="bi bi-play-fill"></span>
                <span class="bi bi-chevron-bar-right"></span>
            </div>
       </div>
       <div class="card-body">
          <img src="./images/arjitsingh.jpg" class="card-img">
       </div>
   </div>

   <div class="card">
    <div class="card-header">
         <div class="card-title">Arjit Singh</div>
         <div class="controls">
             <span class="bi bi-chevron-bar-left"></span>
             <span class="bi bi-play-fill"></span>
             <span class="bi bi-chevron-bar-right"></span>
         </div>
    </div>
    <div class="card-body">
       <img src="./images/arjitsingh.jpg" class="card-img">
    </div>
</div>
</body>
</html>

10/04
====

Ex: Amazon Cards

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Amazon</title>
    <style>
        .content-row {
            display: grid;
            grid-template-columns: 3fr 3fr 3fr 3fr;
            padding: 10px;
            margin-bottom: 30px;
        }
        .card {
            padding: 10px;
            margin: 5px;
            background-color: white;
            box-shadow: 2px 2px 2px gray;
            height: 400px;
            font-family: Arial;
        }
        section {
            margin-top: -250px;
        }
        .card-title {
            font-size: 22px;
            font-weight: bold;
        }
        .row {
            display: grid;
            grid-template-columns: 6fr 6fr;
            grid-gap: 5px;
        }
        .card-img {
            width: 100%;
        }
        .card-header {
            height: 70px;
        }
        .card-footer {
            text-align: center;
            padding-top: 20px;
        }
        .more {
            color:blue;
        }
    </style>
</head>
<body>
    <header>
        <img src="./images/amazon-banner.png" width="100%">
    </header>
    <section>
        <div class="content-row">
            <div class="card">
                <div class="card-header">
                    <div class="card-title">Appliances for your home | Up to 55% off</div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div><img class="card-img" src="./images/a1.jpg">
                            <p>Air Conditioners</p>
                        </div>
                        <div><img class="card-img" src="./images/a2.jpg">
                             <p>Refrigerators</p>
                        </div>
                    </div>
                    <div class="row">
                        <div><img class="card-img" src="./images/a3.jpg"> <p>Microwaves</p> </div>
                        <div><img class="card-img" src="./images/a4.jpg"> <p>Washing Machines</p> </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="more">see more</div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <div class="card-title">Revamp your home in style</div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div><img class="card-img" src="./images/a5.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a6.jpg"> <p>Microwaves</p></div>
                    </div>
                    <div class="row">
                        <div><img class="card-img" src="./images/a7.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a8.jpg"> <p>Microwaves</p></div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="more">see all</div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                   <div class="card-title"> Starting ₹149 | Headphones</div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div><img class="card-img" src="./images/a9.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a10.jpg"> <p>Microwaves</p></div>
                    </div>
                    <div class="row">
                        <div><img class="card-img" src="./images/a11.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a12.jpg"> <p>Microwaves</p></div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="more">explore all</div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <div class="card-title">Automotive essentials | Up to 60% off</div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div><img class="card-img" src="./images/a1.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a2.jpg"> <p>Microwaves</p></div>
                    </div>
                    <div class="row">
                        <div><img class="card-img" src="./images/a3.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a4.jpg"> <p>Microwaves</p></div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="more">see more</div>
                </div>
            </div>
        </div>

        <div class="content-row">
            <div class="card">
                <div class="card-header">
                    <div class="card-title">Appliances for your home | Up to 55% off</div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div><img class="card-img" src="./images/a1.jpg">
                            <p>Air Conditioners</p>
                        </div>
                        <div><img class="card-img" src="./images/a2.jpg">
                             <p>Refrigerators</p>
                        </div>
                    </div>
                    <div class="row">
                        <div><img class="card-img" src="./images/a3.jpg"> <p>Microwaves</p> </div>
                        <div><img class="card-img" src="./images/a4.jpg"> <p>Washing Machines</p> </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="more">see more</div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <div class="card-title">Revamp your home in style</div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div><img class="card-img" src="./images/a5.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a6.jpg"> <p>Microwaves</p></div>
                    </div>
                    <div class="row">
                        <div><img class="card-img" src="./images/a7.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a8.jpg"> <p>Microwaves</p></div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="more">see all</div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                   <div class="card-title"> Starting ₹149 | Headphones</div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div><img class="card-img" src="./images/a9.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a10.jpg"> <p>Microwaves</p></div>
                    </div>
                    <div class="row">
                        <div><img class="card-img" src="./images/a11.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a12.jpg"> <p>Microwaves</p></div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="more">explore all</div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <div class="card-title">Automotive essentials | Up to 60% off</div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div><img class="card-img" src="./images/a1.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a2.jpg"> <p>Microwaves</p></div>
                    </div>
                    <div class="row">
                        <div><img class="card-img" src="./images/a3.jpg"> <p>Microwaves</p></div>
                        <div><img class="card-img" src="./images/a4.jpg"> <p>Microwaves</p></div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="more">see more</div>
                </div>
            </div>
        </div>
    </section>
</body>
</html>

                        Hyperlinks in HTML

- Every web application must provide a simplified navigation mechanism.
- User must able to reach to the required location with single click.
- Websites or applications use a "Site Map" for navigation among all the services provided by the business.
- Navigation is designed using Hyperlink.
- Hyperlink is a clickable text, picture or graphic that navigates user from one location to another when clicked.
- HTML can create hyperlinks by using "<a>" anchor element.
- Hyperlinks are classified into 2 types
    a) Intra document links
    b) Inter document links

Intra Document Links:
- Intra document link allow navigation from one location to another within page.
- The target location is marked with an "ID".

            <footer id="footer">
            <aside id="ads">
            <aside id="social">

- You can reach to the marked location by requesting ID with "#" hash reference.
- You can request from URL in address bar or from a hyperlink.

            http://server.com/page.html#ads
           
            <a href="#footer"> Text | Image | Graphics </a>
            <a href="#social">  any content </a>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Intra Links</title>
    <style>
        header {
            background-color: black;
            color:white;
            padding: 2px;
            text-align: center;
        }
        section {
            display: grid;
            grid-template-columns: 2fr 10fr;
            margin-top: 20px;
        }
        main {
            height: 500px;
            overflow: auto;
        }
        .menu {
            list-style: none;
            margin-left: -30px;
            font-family: Arial;
            font-size: 20px;    
        }
        li {
            margin-top: 10px;
            margin-bottom: 10px;
            width: 100px;
            background-color: black;
            color:white;
            padding: 10px;
            border-radius: 5px;
        }
        nav a {
          color:white;
          text-decoration: none;
        }
        li:hover {
            background-color: blue;
        }
        main a:visited {
            color:green;
        }
    </style>
</head>
<body>
    <header>
        <h3>Shopper</h3>
    </header>
    <section>
        <nav>
            <ul class="menu">
                <li><a href="#home">Home</a></li>
                <li><a href="#kids">Kids</a></li>
                <li><a href="#women">Women</a></li>
                <li><a href="#men">Men</a></li>
            </ul>
        </nav>
        <main>
            <h3 id="home">Home</h3>
            <p>Lorem, ipsum dolor <span>Offers on <a href="#iphone">iPhone</a></span> sit amet consectetur adipisicing elit. Porro omnis dicta blanditiis, ea quo beatae magnam! Fugiat ullam, assumenda tenetur corrupti incidunt temporibus voluptatum odit. Similique quis reprehenderit quas corporis. Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati sint repellat iste, a voluptates distinctio ducimus nisi est fugiat. Perspiciatis, maxime. Voluptate officiis esse quaerat animi soluta voluptates autem quae.</p>
            <h3 id="women">Women Shopping</h3>
            <img src="./images/women-fashion.jpg" width="200" height="200">
            <div>
                <a href="#home">Back to Top</a>
            </div>
            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Porro omnis dicta blanditiis, ea quo beatae magnam! Fugiat ullam, assumenda tenetur corrupti incidunt temporibus voluptatum odit. Similique quis reprehenderit quas corporis. Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati sint repellat iste, a voluptates distinctio ducimus nisi est fugiat. Perspiciatis, maxime. Voluptate officiis esse quaerat animi soluta voluptates autem quae.</p>
            <h3 id="men">Men Shopping</h3>
            <img src="./images/men-fashion.jpg" width="200" height="200">
            <div>
                <a href="#home">Back to Top</a>
            </div>
            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Porro omnis dicta blanditiis, ea quo beatae magnam! Fugiat ullam, assumenda tenetur corrupti incidunt temporibus voluptatum odit. Similique quis reprehenderit quas corporis. Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati sint repellat iste, a voluptates distinctio ducimus nisi est fugiat. Perspiciatis, maxime. Voluptate officiis esse quaerat animi soluta voluptates autem quae.</p>
             <figure id="iphone">
                <img src="./images/iphone-white.jpg" width="200" height="200">
                <figcaption>iPhone 16 (White) 128 GB</figcaption>
             </figure>
            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Porro omnis dicta blanditiis, ea quo beatae magnam! Fugiat ullam, assumenda tenetur corrupti incidunt temporibus voluptatum odit. Similique quis reprehenderit quas corporis. Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati sint repellat iste, a voluptates distinctio ducimus nisi est fugiat. Perspiciatis, maxime. Voluptate officiis esse quaerat animi soluta voluptates autem quae.</p>
            <h3 id="kids">Kids Shopping</h3>
            <img src="./images/kids-fashion.jpg" width="200" height="200">
            <div>
                <a href="#home">Back to Top</a>
            </div>
            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Porro omnis dicta blanditiis, ea quo beatae magnam! Fugiat ullam, assumenda tenetur corrupti incidunt temporibus voluptatum odit. Similique quis reprehenderit quas corporis. Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati sint repellat iste, a voluptates distinctio ducimus nisi est fugiat. Perspiciatis, maxime. Voluptate officiis esse quaerat animi soluta voluptates autem quae.</p>
           
        </main>
    </section>
</body>
</html>

FAQ's:
1. How to change the color for visited and active links?
A. By using <body> element attributes
        - alink
        - valink
    By using CSS classes
        :active
        :visited

Syntax:
    <body  alink="red" vlink="green">

     a:visited {
         color:green;
    }
    a:active
         color:red;
     }

2. How to remove underline for hyperlink?
A. By configure "text-decoration" set to "none".

Syntax:
    a {
       text-decoration: none;
    }

3. What is difference between "src" & "href" ?
A. "src" is a getter.
    "href" is a setter. It sets a value into the browser address bar.

4. If you don't have much content to scroll to the marked location, how to highlight
    the current content?
A. By using CSS ":target" class you can highlight the current context.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .card {
            width: 200px;
            padding: 20px;
            box-shadow: 4px 4px 2px black;
            border:1px solid black;
            margin: 20px;
        }
        .card:target {
            background-color: black;
            color:white;
            border-radius: 100%;
            height: 200px;
            text-align: center;
        }
        section {
            margin-top: 50px;
            display: flex;
            flex-direction: row;
        }
        nav {
            display: flex;
            justify-content: center;
            padding: 20px;
        }
        nav span {
            font-size: 25px;
            padding-left: 20px;
            padding-right: 20px;
       
        }
    </style>
</head>
<body>
    <nav>
        <span><a href="#html">HTML</a></span>
        <span><a href="#css">CSS</a></span>
        <span><a href="#js">JavaScript</a></span>
    </nav>
    <section>
        <div class="card" id="html">
            <h3>HTML</h3>
            <p>It is a markup language.</p>
        </div>
        <div class="card" id="css">
            <h3>CSS</h3>
            <p>It is used to style DOM.</p>
        </div>
        <div class="card" id="js">
            <h3>JavaScript</h3>
            <p>It is used to manipulate DOM.</p>
        </div>
    </section>
</body>
</html>

11/04
=====

Inter Documents Links
- Inter document links handle various interactions.
- It allows
    a) Navigation to a file
    b) Navigation to any URL
    c) Access to any browser supported application
    d) Access to any client side function

Navigate to file:
- You can create a link for any existing file in your project.
- You can link to any type of file.
- Every linked document can't open in browser.
- Browser requires relative plugin's to open the file content.
- If plugin is not supported then the linked file will download.

Syntax:
        <a href="./shopper.html"> Shopper Template </a>
        <a href="./images/pic.jpg">  Photo </a>
        <a href="./docs/catalog.pdf"> Catalog </a>

FAQ: How to configure a link that always downloads the file?
Ans:  By using <a> anchor "download" attribute.

Syntax:
        <a href="./images/pic.jpg"  download="any_file_name">
        <a href="./images/pic.jpg"  download>

Navigate to URL:
- You can configure a hyperlink that navigate user from current page to any remote resource location.
- It can be a webpage, image, or any document.
- URL must have proper
    a) protocol
    b) domain
    c) reference path for resource [optional]

Syntax:
    <a  href="https://www.amazon.in"&gt; Amazon Shopping </a>
    <a href="http://www.server.com/path/file.jpg"&gt; Remote Photo </a>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <title>Document</title>
</head>
<body>
    <ol>
        <li> <a href="./shopper-template.html">Shopper Template</a> </li>
        <li> <a href="./images/women-fashion.jpg"> Women Fashion </a></li>
        <li> <a href="./images/kids-fashion.jpg" download="DSC00153.jpg"> <img src="./images/kids-fashion.jpg" width="100" height="100"> <span class="bi bi-download"></span> </a></li>
        <li> <a href="./docs/catalog.pdf"> Fitness Catalog </a> </li>
        <li> <a href="./docs/ishop.docx"> Shopping Project Document </a> </li>
        <li> <a href="https://www.amazon.in"&gt; Amazon India </a></li>
        <li> <a href="https://www.amazon.com"&gt; Amazon US </a></li>
        <li> <a href="http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/01000/opgs/edr/fcam/FLB_486265257EDR_F0481570FHAZ00323M_.JPG"&gt; Mars Rover Photo</a></li>
    </ol>
</body>
</html>

Accessing browser supported application:
- Hyperlink can invoke various applications from your browser.
- Applications must support browser, the popular apps are

    a) Email App            "mailto"
    b) Phone App            "tel"
    c) Skype App            "skype"
    d) WhatsApp            "wa.me"

Syntax:
    <a href="youremail@gmail.com">  Mail </a>
    <a href="tel:+919999112234"> Call </a>
    <a hre="https://wa.me/your_number"&gt; WhatsApp </a>


Accessing Client Side Function:
- Client side functions are written using client side script like "JavaScript".
- These functions are used in BOM and DOM interactions.
   
        Browser Object Model
            - window
            - location
            - navigator
            - history
            - document

        Document Object Model
            - Event Binding
            - Style Binding
            - Class Binding
            - Data Binding etc.

- You can invoke script functions by using "javascript" reference.

Syntax:
      <a href="javascript:function(){}">  </a>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <title>Document</title>
</head>
<body>
    <ol>
       <li> For more details you can <a href="info@nareshit.in"><span class="bi bi-envelope"> info@nareshit.in</span> </a></li>
       <li> You can give a missed call to <a href="tel:+919876543211"> +919876543211 </a> </li>
       <li> You message on <span class="bi bi-whatsapp"> <a href="https://wa.me/+919876543211"&gt; +919876543211 </a> </span> </li>
       <li> Skype Us <span class="bi bi-skype"> <a href="skype:youraccount?call"> Nareshit@outlook.com </a> </span> </li>
       <li> <span class="bi bi-printer-fill"> <a href="javascript:window.print()">Print Page </a> </span> </li>
    </ol>
</body>
</html>


FAQ's:
1. How to open linked document in a new tab?
A. By using  <a> anchor "target" attribute set to "_blank".

Syntax:
    <a href="./images/fashion.jpg" target="_blank">  Fashion </a>

2. How to open linked document in a new window?
A. By using JavaScript "window.open()" method.

Syntax:
 <a href="javascript:window.open('path', 'title', ' features_for_window' )">

        window features are    : width, height, buttons etc.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <title>Document</title>
</head>
<body>
    <ol>
      <li> <a href="./images/women-fashion.jpg"> Women Fashion </a> </li>
      <li> <a href="./images/kids-fashion.jpg" target="_blank"> Kids Fashion </a> </li>
      <li> <a href="javascript:window.open('./images/men-fashion.jpg','Men','width=300 height=400')"> Men Fashion </a> </li>
      <li> <a href="./docs/catalog.pdf" target="_blank"> Catalog </a></li>
    </ol>
</body>
</html>

3. How to open linked document in the same window along with existing content in page?
A: By using HTML 5 <iframe> element.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <title>Document</title>
    <style>
        body {
            display: grid;
            grid-template-columns: 2fr 10fr;
        }
        iframe {
            border:none;
        }
    </style>
</head>
<body>
   <nav>
    <ol>
        <li> <a href="./images/women-fashion.jpg"> Women Fashion </a> </li>
        <li> <a href="./images/kids-fashion.jpg" target="_blank"> Kids Fashion </a> </li>
        <li> <a href="javascript:window.open('./images/men-fashion.jpg','Men','width=300 height=400')"> Men Fashion </a> </li>
        <li> <a href="./docs/catalog.pdf" target="main-frame"> Catalog </a></li>
        <li> <a href="./images/a9.jpg" target="main-frame"> <img src="./images/a9.jpg" width="50" height="50"> </a> </li>
        <li> <a href="./shopper-template.html" target="main-frame">Shopper</a> </li>
        <li> <a href="https://www.youtube.com/embed/pLkzLBCBeuA&quot; target="main-frame"> Java Functions </a> </li>
        <li> <a href="https://www.youtube.com/embed/OzltVfNBKt4&quot; target="main-frame"> AWS Workshop </a> </li>
      </ol>
   </nav>
   <main>
        <iframe name="main-frame" width="100%" height="550"></iframe>
   </main>
</body>
</html>

12/04
=====
Iframe in HTML

- iFrame allows to embed any content into page.
- Embedded content can be any resource or URL.

Syntax:
    <iframe  width=""  height=""  src="">  </iframe>

- You can embed video content, power point presentation, images, and all type of
  documents whose plugins are supported by browser.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <iframe width="400" height="300" src="./docs/catalog.pdf"></iframe>
    <iframe width="400" height="300" src="https://www.youtube.com/embed/F_LARJNfJz4"></iframe&gt;
    <iframe src="https://www.slideshare.net/slideshow/embed_code/key/pUigQOhQkfVV6q?startSlide=1&quot; width="597" height="486" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px;max-width: 100%;" allowfullscreen></iframe><div style="margin-bottom:5px"><strong><a href="https://www.slideshare.net/ZintleTonyela/html-111759899&quot; title="Html" target="_blank">Html</a></strong> from <strong><a href="https://www.slideshare.net/ZintleTonyela&quot; target="_blank">Zintle Tonyela</a></strong></div>
   
</body>
</html>


Ex: YouTube Design

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Youtube</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        header {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            font-family: Arial;
        }
        .bi-justify {
            font-size: 30px;
        }
        .search-bar {
            display: flex;
            flex-direction: row;
            width: 400px;
            justify-content: space-between;
            border:1px solid gray;
            border-radius: 20px;
            padding: 10px;
        }
        .search-container {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            width: 500px;
            align-items: center;
        }
        .bi-mic-fill {
            font-size: 20px;
            background-color: lightgray;
            padding: 5px;
            border-radius: 100%;
            width: 25px;
            height: 25px;
            text-align: center;
        }
        .bi-three-dots-vertical {
            font-size: 22px;
        }
        .btn-signin {
            border:1px solid blue;
            padding: 10px;
            border-radius: 20px;
            color:blue;
        }
        section {
            margin-top: 20px;
            display: grid;
            grid-template-columns: 1fr 11fr;
        }
        .banner {
            border-radius: 20px;
        }
        nav {
            font-family: Arial;
        }
        .nav-item{
            margin-top: 20px;
            margin-bottom: 20px;
            text-align: center;
            margin-left: -40px;
        }
        .nav-text {
            font-size: 12px;
        }
        .nav-icon {
            font-size: 18px;
        }
        main {
            height: 500px;
            overflow: auto;
        }
        article {
            display: grid;
            grid-template-columns: 2fr 10fr;
            margin-top: 20px;
            font-family: Arial;
        }
        .logo {
            border:1px solid red;
            border-radius: 100%;
            padding: 5px;
        }
        .article-title {
            font-weight: bold;
            font-size: 25px;
            margin-bottom: 10px;
        }
        .article-subtitle {
            font-size: 15px;
            color:gray;
            margin-bottom: 20px;
        }
        .article-text {
            margin-bottom: 10px;
        }
        .btn-subscribe {
            margin-top: 10px;
            display: block;
            background-color: black;
            color:white;
            border-radius: 20px;
            width: 100px;
            padding: 10px;
        }
        .services {
            margin-top: 20px;
            font-family: Arial;
        }
        .services-menu span {
            font-size: 20px;
            padding-left: 30px;
        }
        .services-menu span:first-child {
            font-weight: bold;
            text-decoration: underline;
        }
        .services-menu .bi-search {
            color:gray;
        }
        .services-menu {
            margin-bottom: 20px;
        }
        .live-video {
            padding-left: 30px;
            margin-top: 30px;
            display: grid;
            grid-template-columns: 2fr 10fr;
            grid-gap: 30px;
        }
        .live-text {
            width: 80%;
            margin-top: 20px;
        }
        .live-title {
            font-size: 18px;
            font-weight: bold;
            padding-bottom: 20px;
        }
        .live-subtitle {
            color:gray;
        }
        .videos {
            display: grid;
            grid-template-columns: 2.4fr 2.4fr 2.4fr 2.4fr 2.4fr;
        }
        .videos iframe {
            width: 210px;
        }
        .card-footer {
            padding-top: 20px;
        }
        .card-body{
            padding-top: 10px;
        }
    </style>
</head>
<body>
    <header>
        <div>
            <span class="bi bi-justify"></span>
            <img src="./images/youtube-logo.jpg" width="100">
        </div>
        <div class="search-container">
            <div class="search-bar"> <span>Search</span> <span class="bi bi-search"></span> </div>
            <span class="bi bi-mic-fill"></span>
        </div>
        <div>
            <span class="bi bi-three-dots-vertical"></span>
            <span class="btn-signin"> <span class="bi bi-person-circle"></span> Sign in </span>
        </div>
    </header>
    <section>
        <nav>
          <div class="nav-item">
             <span class="bi bi-house-door nav-icon"></span>
             <br>
             <span class="nav-text">Home</span>
          </div>
          <div class="nav-item">
            <span class="bi bi-camera-video nav-icon"></span>
            <br>
            <span class="nav-text">Videos</span>
         </div>
         <div class="nav-item">
            <span class="bi bi-play-btn nav-icon"></span>
            <br>
            <span class="nav-text">Subscription</span>
         </div>
         <div class="nav-item">
            <span class="bi bi-person-circle nav-icon"></span>
            <br>
            <span class="nav-text">Profile</span>
         </div>
        </nav>
        <main>
            <img class="banner" src="./images/channel-banner.jpg" width="90%">
            <article>
                <div>
                    <img class="logo" src="./images/nit-logo.jpg">
                </div>
                <div>
                    <div class="article-title">Naresh i Technologies</div>
                    <div class="article-subtitle">
                        @NareshIT• 1.32M subscribers • 3.4K videos
                    </div>
                    <div class="article-text">
                        We are one of the software training organization With a library of 200+ courses
                    </div>
                    <div>
                        <a href="instagram.com/nareshitech">instagram.com/nareshitech</a> and 7 more links
                    </div>
                    <div>
                        <span class="btn-subscribe"> <span class="bi bi-bell-fill"></span> Subscribe</span>
                    </div>
                </div>
            </article>
            <div class="services">
                <div class="services-menu">
                    <span>Home</span>
                    <span>Videos</span>
                    <span>Shorts</span>
                    <span>Live</span>
                    <span>Playlists</span>
                    <span>Posts</span>
                    <span class="bi bi-search"></span>
                </div>
                <hr noshade width="95%" size="0.5" color="gray">
                <div class="live-video">
                    <div>
                        <iframe src="https://www.youtube.com/embed/F_LARJNfJz4"></iframe&gt;
                    </div>
                    <div>
                        <div class="live-title">Playwright Automation | Mr. Sumanth | Naresh IT</div>
                        <div class="live-subtitle">
                            Naresh i Technologies • 14 watching
                        </div>
                        <div class="live-text">
                            https://chat.whatsapp.com/K5VsfaOdAO0BYgLe7JgnFd Introduction to Playwright Automation | Mr. Sumanth ** For Online Training Registration: https://goo.gl/r6kJbB ► Call: +91-8179191999 ...
                        </div>
                    </div>
                </div>
                <h3>Videos</h3>
                <div class="videos">
                    <div class="video-card">
                        <div class="card-header">
                            <iframe src="https://www.youtube.com/embed/HDte6jsic0U"></iframe&gt;
                        </div>
                        <div class="card-body">
                            Mastering Centralized Cloud Networking with AWS
                        </div>
                        <div class="card-footer">
                            <span class="bi bi-eye-fill"> 900 views</span>
                            <span> 5 days ago </span>
                        </div>
                    </div>
                    <div>
                        <iframe src="https://www.youtube.com/embed/OzltVfNBKt4"></iframe&gt;
                    </div>
                    <div>
                        <iframe src="https://www.youtube.com/embed/F_LARJNfJz4"></iframe&gt;
                    </div>
                    <div>
                        <iframe src="https://www.youtube.com/embed/F_LARJNfJz4"></iframe&gt;
                    </div>
                    <div>
                        <iframe src="https://www.youtube.com/embed/F_LARJNfJz4"></iframe&gt;
                    </div>
                </div>
            </div>
        </main>
    </section>
</body>
</html>

15/04
=====
Tables in HTML
- Tables are used to design Grid components.
- Grid is a collection of rows and columns.
- Data Grid is a component that is used for presenting and manipulating data.
- HTML table elements are

        <table>
        <caption>
        <thead>
        <tbody>
        <tfoot>
        <tr>
        <th>
        <td>
        <colgroup>

Table Attributes:

1. Frame, Rules & Border
   
     frame : It sets a frame for table. It have values: box, void, above, below, rhs, lhs.

            <table frame="box | void..">

             It can take only one value for attribute. Hence you can't apply multiple.

         
    rules  : It sets rules [lines] for rows, columns and groups.
            It have values : all, rows, cols, groups, none.

            <table rules="all | rows | cols.. ">

    border: It sets border for cells. It can have values 0=false, 1=true.

             <table border="1">
           
            You can't display border if rules attribute is defined for table.
            Make sure that rules attribute is removed from table.

2. Cell Space and Padding

    cellspacing    : It sets space between cells.
    cellpadding    : It sets space between border and content inside cell.

Syntax:
    <table cellspacing="5"  cellpadding="5" border="1">

3. Align Horizontal & Vertical

    align            : It aligns content left, center, right or justified horizontally.
    valign        : It aligns content top, center or bottom vertically.

Syntax:
    <table align="center">
    <tbody align="center">
    <tr align="center">
    <td align="center" valign="top">

4. Back color & Image

    bgcolor        : It sets background color for table, group, row, or cell.
    background    : It sets background image for table, group, row or cell.

Syntax:
    <table bgcolor="yellow">
    <tr background="./images/pic.jpg">

5. Width & Height

    width        : It is defined only for table, td or th.
                  It sets to entire column.

    height        : It is defined only for  tr & td.
                   It sets to entire row.

Syntax:
    <th width="20">
    <tr height="30">


6. Merging rows & columns

    colspan        : It merges specified number of cells into one cell.
                  It is used to merge all columns into one column.

    rowspan        : it is used to merge all rows into one row.

Note: You can apply only for td or th.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <table border="1" width="100%">
        <thead>
            <tr>
                <th colspan="2">Name</th>
                <th colspan="3">Address</th>
            </tr>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>City</th>
                <th>State</th>
                <th>Postal Code</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td rowspan="7" align="center"> D<br>E<br>L<br>H<br>I </td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <td colspan="5" align="center">&copy; copyright 2025</td>
            </tr>
        </tfoot>
    </table>
</body>
</html>

 Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Table</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        table {
            font-family: Arial;
        }
        caption {
            text-align: left;
            margin-bottom: 10px;
            font-weight: bold;
            color:gray;
        }
        .img-team {
            width: 20px;
            padding-right: 10px;
        }
        .won {
            display: inline-block;
            width: 15px;
            height: 15px;
            border-radius: 15px;
            border: 1px solid green;
            padding: 5px;
            text-align: center;
            font-size: 14px;
            color:green;
        }
        .lost {
            display: inline-block;
            width: 15px;
            height: 15px;
            border-radius: 15px;
            border: 1px solid red;
            padding: 5px;
            text-align: center;
            font-size: 14px;
            color:red;
        }
    </style>
</head>
<body>
    <table width="100%"  border="0" rules="rows" frame="void" cellspacing="5" cellpadding="10">
        <caption>IPL Points Table</caption>
        <colgroup span="11"></colgroup>
        <thead>
            <tr>
                <th colspan="12">IPL - 2025</th>
            </tr>
            <tr >
                <th width="20">POS</th>
                <th>&nbsp;</th>
                <th>TEAM</th>
                <th>P</th>
                <th>W</th>
                <th>L</th>
                <th>NR</th>
                <th>NRR</th>
                <th>FOR</th>
                <th>AGAINST</th>
                <th>PTS</th>
                <th width="150">RECENT FORM</th>
            </tr>
        </thead>
        <tbody >
            <tr align="center" valign="center">
                <td>1</td>
                <td><span class="bi bi-dash"></span></td>
                <td> <img src="./images/GT.png" align="left" class="img-team"> <span>GT</span> </td>
                <td>6</td>
                <td>4</td>
                <td>2</td>
                <td>0</td>
                <td>1.081</td>
                <td>1148/114.3</td>
                <td>1069/119.3</td>
                <td>8</td>
                <td align="center">
                    <span class="lost">L</span>
                    <span class="won">W</span>
                    <span class="won">W</span>
                    <span class="won">W</span>
                    <span class="won">W</span>
                </td>
            </tr>
            <tr align="center" valign="center">
                <td>2</td>
                <td><span class="bi bi-dash"></span></td>
                <td> <img src="./images/DC.png" align="left" class="img-team"> <span>DC</span> </td>
                <td>5</td>
                <td>4</td>
                <td>2</td>
                <td>0</td>
                <td>1.081</td>
                <td>1148/114.3</td>
                <td>1069/119.3</td>
                <td>8</td>
                <td align="center">
                    <span class="lost">L</span>
                    <span class="won">W</span>
                    <span class="won">W</span>
                    <span class="won">W</span>
                    <span class="won">W</span>
                </td>
            </tr>
            <tr align="center" valign="center">
                <td>3</td>
                <td><span class="bi bi-dash"></span></td>
                <td> <img src="./images/RCB.png" align="left" class="img-team"> <span>RCB</span> </td>
                <td>6</td>
                <td>4</td>
                <td>2</td>
                <td>0</td>
                <td>1.081</td>
                <td>1148/114.3</td>
                <td>1069/119.3</td>
                <td>8</td>
                <td align="center">
                    <span class="lost">L</span>
                    <span class="won">W</span>
                    <span class="lost">L</span>
                    <span class="won">W</span>
                    <span class="lost">L</span>
                </td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <td colspan="12">
                    <div>W  - Won</div>
                    <div>L  - Lost</div>
                    <div>NR - No Result</div>
                    <div>NRR- Net Run Rate</div>
                </td>
            </tr>
        </tfoot>
    </table>
</body>
</html>

16/04
=====

Note: You can create nested table, but make sure that the child table is inside
      <td> element.

Syntax:
        <table>
            <tr>
             <td>
                      <table>
                   ........
                 </table>
            </td>
            </tr>
           </table>

Ex: Nested Tables

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <table width="100%" border="1" frame="void" cellspacing="10" cellpadding="10">
        <tr height="400">
            <td>
                <table width="100%" border="0" frame="void" height="400">
                    <thead>
                        <tr>
                            <th colspan="2">Title</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><img src="./images/a1.jpg" width="100%"></td>
                            <td> <img src="./images/a2.jpg" width="100%"></td>
                        </tr>
                        <tr>
                            <td><img src="./images/a3.jpg" width="100%"></td>
                            <td><img src="./images/a1.jpg" width="100%"></td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2">More</td>
                        </tr>
                    </tfoot>
                </table>
            </td>
            <td>
                <table width="100%" border="0" frame="void" height="400">
                    <thead>
                        <tr>
                            <th colspan="2">Title</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><img src="./images/a1.jpg" width="100%"></td>
                            <td> <img src="./images/a2.jpg" width="100%"></td>
                        </tr>
                        <tr>
                            <td><img src="./images/a3.jpg" width="100%"></td>
                            <td><img src="./images/a1.jpg" width="100%"></td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2">More</td>
                        </tr>
                    </tfoot>
                </table>
            </td>
            <td>
                <table width="100%" border="0" frame="void" height="400">
                    <thead>
                        <tr>
                            <th colspan="2">Title</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><img src="./images/a1.jpg" width="100%"></td>
                            <td> <img src="./images/a2.jpg" width="100%"></td>
                        </tr>
                        <tr>
                            <td><img src="./images/a3.jpg" width="100%"></td>
                            <td><img src="./images/a1.jpg" width="100%"></td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2">More</td>
                        </tr>
                    </tfoot>
                </table>
            </td>
            <td>
                <table width="100%" border="0" frame="void" height="400">
                    <thead>
                        <tr>
                            <th colspan="2">Title</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><img src="./images/a1.jpg" width="100%"></td>
                            <td> <img src="./images/a2.jpg" width="100%"></td>
                        </tr>
                        <tr>
                            <td><img src="./images/a3.jpg" width="100%"></td>
                            <td><img src="./images/a1.jpg" width="100%"></td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2">More</td>
                        </tr>
                    </tfoot>
                </table>
            </td>
        </tr>
    </table>
</body>
</html>

www.telerik.com

                                   Forms in HTML
- Form is a generic container.
- It provides an UI for user, so that user can view, input, edit or delete values in a data store.
- It allows to handle various interactions by using different elements like
        button
        textbox
        checkbox
        radio
        listbox
        dropdown  etc.

- The <form> container is used to create an UI for handling CRUD.

        C    Create
        R    Read
        U    Update
        D    Delete

- Form is a generic container with validation, actions and methods pre-defined.

Syntax:
        <form>
            ... elements ...
        </form>

Form Attributes:

1. id                ]
2. name            ]   used for reference in CSS, JavaScript etc.
3. class            ]

Syntax:
        <form  id="frmLogin"  name="LoginForm"  class="form-group">

        </form>

4. method        : It defines the actions to be performed.
                  It defines the functionality to configure.
                  HTML form can be configured for 2 requests
                    a) GET
                    b) POST

                  GET submits to fetch data from server.
                  POST submits to save data on server.

                       
                        GET  vs   POST
GET
- It is a request method to submit data for fetching.
- It submits data as "Query String".
- Query string is appended into URL and displayed in browser address bar.

            page.html ?key1=value1&key2=value2

- Query is a key and  value collection appended with ? mark and &.
- Everyone can view the values.
- It is easy to hack the values.
- It is not safe.
- It is stored in browser logs. [history]
- It can be bookmarked. [favorites]
- You can't submit complex data, like binary type data.
- There is a limit for data, max 2048 chars as per standards.

POST:
- It is a request method to submit and save data on server.
- It submits the data as "Form Body".
- It is not stored in browser logs.
- It can't be bookmarked.
- It is safe when compared to GET.
- It is not easy to hack your data.
- It allows complex formats of data.
- There is no limit for data.


FAQ: If GET is not good for saving on server, then why form allows to save on GET?
Ans: GET request can cache the data. Hence it can save round trips to server.
     
Note: POST can't cache the data.
      It is mandatory to define the target location while configuring POST action.






5. action            : It specifies the target location for submitting form data.
                   Typically it is a client side or server side page.

Syntax:
        <form method="get"  action="./page.html | php | jsp">


6. novalidate        : It disables the default HTML 5 validations.

Syntax:
        <form method="get"  action="./page.html"  novalidate>

           
                    Form Elements

17/04
=====

Form Attributes
- id
- name
- class
- method
- action
- novalidate
Form Elements:

                                TextBox
- It is an input that allows user to view, input and edit value.
- It is handles a string type data.
- String is a literal with group of characters like alphabet, number and special chars.
- Form <input> element allows to input a value.
- However HTML 5 introduces types for input data. So that it can set validation.

    Syntax:
        <input type="text">            => handle string

Attributes:
1. id            ]
2. name        ]  used for reference
3. class        ]

Note: A form can't submit the value of any element if "name" is not defined.
      Every form element must have a name attribute.

      <input type="text"  name="txtName">

      Names are defined using camel case. [ prefixSuffix ]

4. value        : It specifies the default value to display in textbox.

Syntax:
     <input type="text" name="txtName"  value="john">

5. readonly    : It will not allow to modify the value in textbox, but it allows to submit
              the value.

6. disabled     : It will not allow to modify & submit value.

Syntax:
      <input type="text"  name="txtName"  value="John"  disabled>
      <input type="text"  name="txtName"  value="John"  readonly>

7. placeholder : It defines the watermark text to display for textbox.
              You can see placeholder only when value is not defined.


Syntax:
    <input type="text" name="txtMobile"  placeholder="+91 90000000011">


8. autofocus    : It sets focus for textbox automatically on load.

Syntax:
    <input type="text" name="txtMobile"  autofocus>

9. size        : It sets width for textbox, the default width is 20.
              It is not limit for chars, it is just size of textbox.

Syntax:
    <input type="text" name="txtOTP"  size="5">
    <input type="text" name="txtComments" size="40">

10. maxlength : It specifies the maximum limit of characters in textbox.
              It sets restriction for number of characters.

Syntax:
    <input type="text" name="txtOTP size="5" maxlength="5">

11. minlength    : It sets validation for minimum number of chars in a textbox.

Syntax
    <input type="text" name="txtName" minlength="4" maxlength="10">

    - You can't type more than 10 chars     : it is restriction
    - You can type less than 4 chars button it will not accept :  It is validation

12. required    : It is used for mandatory fields. It will not allow to submit empty.
              It is used to ensure that value is defined in a textbox.


Syntax:
    <input type="text" name="txtName"  required>

Note:  Minlength verifies the length of chars if entered. It will not verify the required
       condition. Hence textbox needs both required and minlength.

13. list        : It is used to configure a datalist for textbox.
             Form datalist is a set of options that are displayed as auto complete text.

Syntax:
       <input type="text"  name="txtCourse"  list="courses">
       <datalist id="courses">
        <option> Java </option>
        <option> JavaScript </option>
       </datalist>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form</title>
</head>
<body>
    <form>
         <dl>
            <dt>User Name</dt>
            <dd><input type="text"  name="txtName" required minlength="4" maxlength="10" placeholder="Name in block letters"></dd>
            <dt>Mobile</dt>
            <dd><input type="text" autofocus name="txtMobile" placeholder="US: +1(000) 0000-000"></dd>
            <dt>OTP</dt>
            <dd><input type="text" name="txtOTP" size="4"  maxlength="4"></dd>
            <dt>Your Course</dt>
            <dd>
                <input type="text" name="txtCourse" list="courses">
                <datalist id="courses">
                    <option>Java</option>
                    <option>JavaScript</option>
                    <option>Oracle</option>
                    <option>AWS</option>
                    <option>UI Front End</option>
                    <option>UI Full Stack</option>
                    <option>Azure</option>
                </datalist>
            </dd>
         </dl>
         <button>Submit</button>
    </form>
</body>
</html>

14. pattern        : It is used to verify the format of input value.
                  Format is verified by using a regular expression.
                  Regular Expression is built by using meta characters & quantifiers.

18/04
=====

Attributes for Textbox
1. id
2. name
3. class
4. value
5. readonly
6.disabled
7. size
8. autofocus
9. minlength
10. maxlength
11. required
12. list
13. placeholder
14. pattern

Meta character        Description
--------------------------------------------------------------------------------------------------------

    ?                zero or one occurrence of a character.

                    Syntax:
                    pattern="colou?r"      => color, colour

    *                zero or more occurrences of a character.

                    Syntax:
                    pattern="colou*r"    => color, colour, colouur, colouuur..

    +                one or more occurrences of a character
   
                    Syntax:
                    pattern="colou+r"    => colour, colouur, colouuur..

    .  (dot)            any single character [alphabet, number or special]

                    Syntax:
                    pattern=".at"    => cat, bat, 2at, $at ..

    |   (or)            It refers to logical or in pattern where you can configure
                    multiple and it can match with any one of them.

                    Syntax:
                    pattern="red | green | blue"     => red, green, blue

    \                It is used as an escape sequence character.
                    It can transform meta character to normal & vice versa.

                    Syntax:
                    pattern="gmail.com"    => gmail2com, gmail$com...
                    pattern="gmail\.com"    => gmail.com
   
    [ ]                It configures a set of values in random or range.

                    [a,d,s]        => only specified chars allows                                    [A,a,d,D,s,S]    => both lower can uppercase of specified set
                    [a-m,A-M]    => any char with in specified range
                    [0-9]            => any numeric
                    [4-5]            => any number with in specified range
                    [4,7,9]        => only specified numbers
                    [a-z,A-Z,0-9]    => all alphabet & numbers
                    [$,%,&,@]    => only specified special chars allowed.

                    Syntax:
                    pattern= "[A-Z][0-9][a-z]"        => B4u
                    pattern= "[0-9][0-9]"        => 31, 24, 66
                    pattern="[0-9][0-9]?"        => 3, 31
                    pattern="[0-9][A-Z]?[0-9]        => 4A5,  52
                   
    [^]                It is used to exclude the specified set of value.
                    It allows all other than the specified.

                    [^a,d,s]            => a,d,s not allowed
                    [^A-Z, a-z, 0-9]    => all special chars allowed

    ( )                It is used for a union of expression.


    \d                It refers to any number from 0 to 9.

    \D                It excludes number and allow all others.

                    Syntax:
                    pattern="\D\d"        => a5, A5, $5                
                    pattern="\d\d?"    => one or two digits number

    \w                It refers words chars, which include alphabet, number &
                    underscore.  [a-z,A-Z,0-9, _ ]
                   
    \W                It refers to non-word chars. All special chars except "_".

                    Syntax:
                    pattern="\W\d\D"        $4A, $4a, $4#

    \s                It refers to blank space. You should not use a manual blank
                    space in pattern. It is always defined with "\s".

                    Syntax:
                    pattern="\d\s[A-Z]"        4 A,  5 H

    \i                It ignores the capitalization of text in expression.

                    Syntax:
                    pattern="colou?r\i"        color, Color, Colour

    \^                It refers expression starts with.

    $                It refers expression ends with.

                    Syntax:
                    pattern="\^ ....expression... $"


    Quantifier             Description
-----------------------------------------------------------------------------------------
      { 4 }                    exactly specified number of chars.

     { 4, 10 }                minimum 4 and maximum 10 chars.

     { 4,  }                minimum 4 and maximum any chars.

    Syntax:
   
    pattern = "\d{10}"                    exactly 10 digits number
    pattern = "\d{2}[A-Z]{3}\s\W{2}"        32HYD $#

    Query: Write a pattern for Indian mobile format  +91 and 10 digits number.

    pattern= "\+91\d{10}"
    pattern="\+91[0-9]{10}"

    Query: Write a patter for US mobile format as shown below
           
                +(1)(000) 000-0000

            pattern="\+\(1\)\(\d{3}\)\s\d{3}-\d{4}"


Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <form>
        Pattern : <input type="text" placeholder="+(1)(000) 000-0000" pattern="\+\(1\)\(\d{3}\)\s\d{3}-\d{4}" name="pattern"> <button>Submit</button>
    </form>
</body>
</html>

19/04
=====

Built-in patterns:

    (?=.*[A-Z])         At least one uppercase letter
    (?=.*[0-9])        At least one numeric
    (?=.*[a-z])        At least one lower case letter
    (?=.*[!@#$%&])    At least one special character

- You have to use the expression individually even when you are referring to multiple.

    (?=.*[A-Z,0-9])                // Not Good
    (?=.*[A-Z])(?=.*[0-9])        // Good

- Avoid using meta characters like \d, \w etc.

    (?=.*[\d])                    // Not Good
    (?=.*[0-9])                // Good


Query: Write a pattern to validate user name 4 to 15 chars alpha numeric.
        Special chars not allowed. Uppercase & Lower case allowed.

       Syntax:
        pattern="[a-z,A-Z,0-9]{4,15}"


Query: Write a pattern to validate User name alpha numeric with _ allowed.
        between 4 to 14 chars. But it must start with uppercase letter.

    Syntax:
        pattern="[A-Z]\w{4,14}"

Query: Write a pattern to validate user name alpha number with underscore
         4 to 15 chars with at least one uppercase letter.

        Note: Always write the priority first.

    Syntax:
        pattern="(?=.*[A-Z])\w{4,15}"

Query: Write a pattern to validate user name alpha numeric with underscore and
        special chars. But at least one uppercase, one number & one special char
        is required. [ 4 to 15 ]

    Syntax:    
        pattern="(?=.*[A-Z])(?=.*[0-9])(?=.*[\W])[\w,\W]{4,15}"


                         Password Input

- It is a string input that can mask the chars with "*".
- All attributes are same as textbox.
- Only "list" attribute is not recommended for password.

Syntax:
    <input type="password" name="Password" required pattern="">

                        Number Input
- It allows to input numeric value.
- It can set step value and range for number.

Attributes:
    a) min
    b) max
    c) step

Syntax:
  <input type="number" name="rate"  min="10.45" max="20.45" step="0.01" value="12.45" required autofocus>

                        Range Input

- It similar to a number input, but contains a slider to select value.
- It will not allow to enter a value.
- It allows only to choose a value.

Syntax:
    <input type="range"  name="rate"  min="1" max="100" value="50" step="5">

                        Color Input

- It shows a color picker that allows to select color from panel.
- Color value must be a 6 chars hexadecimal.

Syntax:
  <input type="color" name="color" value="#ff0000">

                        Email Input

- It a string with default email validation.
- It ensures that the string contains "@" character.

Syntax:
    <input type="email"  autofocus  required  name="Email">


                        URL Input
- It validates a string in URL format.
- URL must have a protocol and proper domain extension.

         www.amazon.in            // invalid
        https://www.amazon.in        // valid
        http://www.amazan.in        // valid

Syntax:
    <input type="url" name="URL" required autofocus>

21/04
=====
- Textbox
- Password
- Number
- Range
- Email
- Url
- Color

                           Date & Time Input

- HTML provides following input types for handling date & time values

        a) date
        b) time
        c) datetime-local
        d) week
        e) month
       
Syntax:
    <input type="date">
    <input type="datetime-local">
    <input type="week">

- HTML date picker will not allow to select a range of dates.
- You can restrict the date selection by using "min & max" attributes.
- The date format for developer is always "year-month-day".

Syntax:
 <input type="date" name="dept"  min="2025-04-21"  max="2025-05-09">


                         File Input
- It is a file browser.
- It allows to browse and select files on client device.

Syntax:
    <input type="file" name="photo">

- You can set filter for specific file type by using "accept" attribute.
- Filter is not a permanent restriction for files, it can be changed dynamically.

Syntax:
    <input type="file" name="photo" accept=".jpg">
    <input type="file" name="resume" accept=".pdf, ".docx">

Note: You can restrict the file types, you can set only filters for file types.

- You can allow selection of multiple files by using "multiple" attribute.

Syntax:
    <input type="file" name="photo" accept=".jpg" multiple>

                        Radio Buttons

- Radio allows to select one or multiple options from a group of choices.
- Radio once checked can't be unchecked.
- Developers use radios with "Mutex" mechanism. [ Mutual Exclusion ]
- Mutex configures multiple tasks to one thread.
- Hence process will allow only one task from a thread.
 
Syntax:
    <input type="radio">  Text1        => both radios are individual
    <input type="radio">  Text2    

- To implement mutex you have to define same name for all radios in a category.

Syntax:
    <input type="radio" name="gender"> Male
    <input type="radio" name="gender"> Female

- You can make any radio selected by using "checked".

Syntax:
    <input type="radio" name="gender" checked> Male

- Radios submit "ON" as default value.
- Hence every radio must be defined with a value attribute.

Syntax:
    <input type="radio" name="gender" value="Male" checked> Male

- Value is an attribute used to submit content. It is not for UI caption.
- Radios and other form elements can have a bound caption by using "<Label>" element.

Syntax:
  <input type="radio" name="gender" value="male"> <label for="gender"> Male </label>

- "for" is an attribute to bind label with relative form element. It must always map to name of element.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <form>
        <dl>
            <dt>Gender</dt>
            <dd>
                <input type="radio" checked value="Male" name="gender"> <label for="gender">Male</label>
                <input type="radio" value="Female" name="gender"> <label for="gender">Female</label>
            </dd>
        </dl>
        <button>Submit</button>
    </form>
</body>
</html>


                              Checkbox
- It is similar to radio but allows to check and uncheck any option dynamically.
- It requires name & value.
- It can be selected using checked.

Syntax:
    <input type="checkbox" name="course" value="HTML" checked>
    <label for="course"> HTML </label>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .user {
            border-left: none;
            border-right: none;
            border-top: none;
            outline: none;
        }
    </style>
</head>
<body>
    <form>
        <dl>
            <dt>User Name</dt>
            <dd>
                <input type="text" class="user" placeholder="User Name">
            </dd>
            <dt>Courses</dt>
            <dd>
                <input type="checkbox" checked value="HTML" name="Course"> <label for="Course"> HTML </label>
                <br><br>
                <input type="checkbox" checked value="CSS" name="Course"> <label for="Course"> CSS </label>
            </dd>
        </dl>
        <button>Submit</button>
    </form>
</body>
</html>

                             Dropdown List
- A dropdown is technically combo box.
- It provides a set of options and allows user to select any one from group of choices.
- The elements used for dropdown are

    <select>            configures a dropdown
    <option>            defines an item in dropdown
    <optgroup>        it groups a set of options under one label.

Syntax:
    <select>
       <option> Text </option>
       <optgroup label="category-name">
        <option> Item-1 </option>
        <option> Item-2 </option>
       </optgroup>
    </select>

- Every option comprises of 3 attributes

        a) value            It defines the value to submit
        b) selected        It keeps the option selected on page load
        c) disabled        It will not allow to select option

Syntax:
    <option  value="to_submit"> text_to_show </option>
    <option  selected>  Text </option>
    <option disabled> Text </option>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .user {
            border-left: none;
            border-right: none;
            border-top: none;
            outline: none;
        }
    </style>
</head>
<body>
    <form>
        <dl>
            <dt>User Name</dt>
            <dd>
                <input type="text" class="user" placeholder="User Name">
            </dd>
            <dt>Courses</dt>
            <dd>
                <input type="checkbox" checked value="HTML" name="Course"> <label for="Course"> HTML </label>
                <br><br>
                <input type="checkbox" checked value="CSS" name="Course"> <label for="Course"> CSS </label>
            </dd>
            <dt>Departure</dt>
            <dd>
                <select name="Airport">
                    <option>Select City</option>
                    <optgroup label="International">
                        <option disabled>London</option>
                        <option>Newyork</option>
                    </optgroup>
                    <optgroup label="Domestic">
                        <option value="RGI">Hyderabad</option>
                        <option selected value="BOM">Mumbai</option>
                    </optgroup>
                </select>
            </dd>
        </dl>
        <button>Submit</button>
    </form>
</body>
</html>

22/04
=====

Datetime
Color
Range
Textbox
Password
Url
Email
Number
Radio
Checkbox
Dropdown

                               List Box
- You can transform a dropdown into list box by using the attributes
    a) size
    b) multiple
- List box allows to select one or multiple options from a group of choices.

Syntax:
      <select size="3" multiple>

- Options and Select are RC type elements.
- RC type allows alphabet, number & special chars.

Syntax:
       <select size="4" multiple>
          <optgroup label="title">
          <option> Text </option>
          </optgroup>
      </select>

Ex: Checkbox List

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .user {
            border-left: none;
            border-right: none;
            border-top: none;
            outline: none;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        ul {
            list-style: none;
            border: 1px solid gray;
            padding: 10px;
            width: 100px;
            height: 50px;
            overflow: auto;
        }
    </style>
</head>
<body>
    <form>
         <ul>
            <li> <input type="checkbox"> <label>HTML</label> </li>
            <li> <input type="checkbox"> <label>CSS</label> </li>
            <li> <input type="checkbox"> <label>Bootstrap</label> </li>
            <li> <input type="checkbox"> <label>jQuery</label> </li>
            <li> <input type="checkbox"> <label>JavaScript</label> </li>
         </ul>
    </form>
</body>
</html>

                               Textarea
- It allows user to input multiline text.
- You can control textarea using
    a) rows
    b) cols
    c) readonly
    d) disabled
- It is RC type element, will not allow rich formats of text.

Syntax:
    <textarea rows="4" cols="40" readonly | disabled>

        ... your text optional ...

    </textarea>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .user {
            border-left: none;
            border-right: none;
            border-top: none;
            outline: none;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
       
    </style>
</head>
<body>
    <form>
        <dl>
            <dt>Your Comments</dt>
            <dd><textarea rows="4" cols="40"></textarea></dd>
            <dt>Terms of Service</dt>
            <dd>
                <textarea disabled rows="4" cols="40"> Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus officiis doloribus corporis enim voluptatum. Nostrum ut voluptatibus velit soluta voluptatum amet adipisci neque alias vel consequatur voluptate esse, consectetur vitae? Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe, nam autem quidem nostrum itaque earum temporibus, facere aut ex veniam mollitia esse quos tenetur minima maiores debitis blanditiis expedita totam. </textarea>
            </dd>
            <dd><input type="checkbox"> <label>I Accept</label></dd>
        </dl>
        <button>Post Comments</button>
    </form>
</body>
</html>

                        Meter & Progress Bar
- Meter is used to show grade meter.
- Progress bar is used to display status of any task performed in page.
- Meter comprises of attributes
    a) min
    b) max
    c) value
    d) low
    e) high

- If low and high value are set to zero or not defined then meter show green color.

Syntax:
        <meter min="1" max="5" value="5"> </meter>                    Green
        <meter min="1" max="5" value="5" low="0" high="0"> </meter>        Green

- Low value must be above min and below max.
- High value must be above value and below max.
            (or)
- High value must be above low and below max.

Note: If range between low & high is zero => Red
      If range between low & high is less  => Red
      If range between low & high is more => yellow
      if low & high are zero                   => Green
Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .user {
            border-left: none;
            border-right: none;
            border-top: none;
            outline: none;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
       ul {
        list-style: none;
       }
       meter {
        width: 200px;
        height: 20px;
       }
    </style>
</head>
<body>
    <form>
        <ul>
            <li> <span>5 <span class="bi bi-star-fill"></span> </span> <meter min="1" max="5" value="5"></meter> </li>
            <li> <span>4 <span class="bi bi-star-fill"></span> </span> <meter min="1" max="5" value="3"></meter> </li>
            <li> <span>2 <span class="bi bi-star-fill"></span> </span> <meter min="1" max="100" value="100" low="40" high="80"></meter> </li>
            <li> <span>1 <span class="bi bi-star-fill"></span> </span> <meter min="1" max="100" value="100" low="60" high="80"></meter> </li>
        </ul>
    </form>
</body>
</html>

- Progress is similar to meter but can't configure colors.
- It is a standard progress of actions performed.

Syntax:
     <progress min="1" max="100" value="40">  </progress>  40% completed

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .user {
            border-left: none;
            border-right: none;
            border-top: none;
            outline: none;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
       progress {
        width: 200px;
        height: 20px;
       }
    </style>
</head>
<body>
    <form>
        <dl>
            <dt>Preparing for download</dt>
            <dd><progress></progress></dd>
            <dt>40% Downloaded</dt>
            <dd>
                <progress min="1" max="100" value="40"></progress>
            </dd>
        </dl>
    </form>
</body>
</html>

                                 Buttons

- Buttons are used to confirm user actions.
- Buttons in HTML are categorized into 2 types

    a) Generic Buttons
    b) Non Generic Buttons

- Generic Buttons have predefined functionality.

    a) HTML 4
        <input type="submit">
        <input type="reset">

    b) HTML 5
        <button type="submit"> Text | Image | Icon </button>
        <button type="reset"> Text | Image | Icon </button>

Note: Submit allows to submit the form data as query string on GET and
      form body on POST.
      Reset allows to reset a form to the default state.

- Non Generic button are static buttons without any pre-defined functionality

    a) HTML 4
        <input type="button" value="any">
   
    b) HTML 5
        <button type="button"> Text | Image | Icons </button>

Note: If button type is not defined in HTML 5, the default is submit type.

        <button> Text </button>        => Submit

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .user {
            border-left: none;
            border-right: none;
            border-top: none;
            outline: none;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
       progress {
        width: 200px;
        height: 20px;
       }
    </style>
</head>
<body>
    <form>
        <dl>
           <dt>Name</dt>
           <dd><input type="text" name="Name"></dd>
           <dd>
              <input type="submit" value="Register">
              <input type="reset" value="Cancel">
              <input type="button" value="Print">
           </dd>
           <dd>
             <button type="submit"> <span class="bi bi-person-fill"></span> Register </button>
             <button type="reset"> <img src="./images/a5.jpg" width="40" height="20"> Cancel</button>
             <button type="button"> <span class="bi bi-printer-fill"> Print </span> </button>
           </dd>
        </dl>
    </form>
</body>
</html>

Ex: Login Form

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .user {
            border-left: none;
            border-right: none;
            border-top: none;
            outline: none;
        }
    </style>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
       body {
          display: flex;
          justify-content: center;
          font-family: Arial;
       }
       form {
          width: 300px;
          border:1px solid gray;
          padding: 30px;
          border-radius: 5px;
       }
       .title {
        font-weight: bold;
        font-size: 30px;
       }
       .form-group {
          margin-top: 15px;
          margin-bottom: 15px;
       }
       .form-label {
          font-weight: bold;
          margin-bottom: 5px;
          display: block;
       }
       .form-control, .form-select {
           font-size: 20px;
           width: 95%;
           padding: 5px;
       }
       .btn-login {
          background-color: gold;
          border:none;
          font-size: 20px;
          padding: 10px;
          width: 100%;
          border-radius: 10px;
       }
       a {
        text-decoration: none;
       }
    </style>
</head>
<body>
    <form>
        <div class="bi bi-person-fill title"> User Login </div>
        <div class="form-group">
            <label class="form-label" for="UserName"> User Name </label>
            <div>
                <input type="text" placeholder="Name in Block Letters" name="UserName" class="form-control">
            </div>
        </div>
        <div class="form-group">
            <label class="form-label" for="Password"> Password </label>
            <div>
                <input type="password" placeholder="One Uppercase letter" name="Password" class="form-control">
            </div>
        </div>
        <div class="form-group">
            <label class="form-label" for="City"> Your City </label>
            <div>
                <select class="form-select" name="City">
                    <option>Select Your City</option>
                    <option>Delhi</option>
                    <option>Hyd</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            By continuing, you agree to Amazon's <a href="#">Conditions of Use</a> and <a href="#">Privacy Notice</a>.
        </div>
        <div>
            <button type="submit" class="btn-login">Login</button>
        </div>
    </form>
</body>
</html>



                          CSS Form Classes
23/04
=====

CSS Form Classes

Element State Classes:

            :hover         on mouse over
            :active         on mouse down
            :focus         on focus [ element gets focus  when you click inside ]
            :read-only     when read-only attribute is set
            :disabled          when disable attribute is set
            :checked         when radio or checkbox is checked
            :target         when element is target of any hyperlink
            :visited          when link is in visited state

FAQ: What is a class?
Ans:  Class is a program template in computer programming.
     You can customize and implement according to requirements.

Ex-1: hover, active

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        button {
            border:none;
            border-radius: 5px;
            background-color: rgb(202, 202, 0);
        }
        button:hover {
            background-color: yellow;
            cursor: grab;
        }
        button:active {
            box-shadow: 3px 3px 2px black;
        }
    </style>
</head>
<body>
    <button> Login </button>
</body>
</html>


Ex-2: Focus

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .UserName+div {
            display: none;
        }
        .UserName:focus+div {
            display: block;
            font-size: 12px;
            color:red;
        }
        .UserName:focus {
            border:1px solid red;
            box-shadow: 2px 2px 2px red;
            outline: none;
            margin-bottom: 5px;
        }
    </style>
</head>
<body>
    <dl>
        <dt>User Name</dt>
        <dd>
            <input type="text" value="John" class="UserName" placeholder="Name in Block Letters">
            <div>Name in Block Letters</div>
        </dd>
    </dl>
</body>
</html>

Ex-3: read-only, disabled

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        input:read-only {
            cursor: not-allowed;
            background-color: lightgray;
        }
        input:disabled {
            background-color: lightyellow;
        }
    </style>
</head>
<body>
    <dl>
        <dt>User Name</dt>
        <dd>
            <input type="text" readonly value="John" class="UserName">
        </dd>
        <dt>Mobile</dt>
        <dd>
            <input type="text"  disabled value="+9198765554321" class="Mobile">
        </dd>
    </dl>
</body>
</html>

Ex-4: Checked

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .terms+label {
            color:red;
        }
        .terms:checked+label {
            color:green;
        }
        .terms~button {
            display: none;
        }
        .terms:checked~button {
            display: block;
        }
        .preview+img {
            display: none;
        }
        .preview:checked+img {
            display: block;
        }
    </style>
</head>
<body>
    <dl>
        <input type="checkbox" class="preview"> Preview
        <img src="./images/iphone-white.jpg" width="100" height="100">
       <dt>Terms of Service</dt>
       <dd>
         <textarea rows="4" cols="40" disabled>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Qui enim repellendus voluptatem aspernatur minima eveniet distinctio reiciendis, libero vitae mollitia et exercitationem tempora, dolores quibusdam ratione nulla odit! Nam, neque. Lorem ipsum dolor, sit amet consectetur adipisicing elit. At aspernatur repudiandae illum corporis atque quis, in nobis similique iusto officiis. Sapiente, vel magni. Quod repellat nesciunt voluptate quisquam harum facilis.</textarea>
       </dd>
       <dd>
          <input type="checkbox" class="terms"> <label> I Accept </label>
          <br><br>
          <button>Submit</button>
       </dd>
    </dl>
</body>
</html>

Validation State Classes:

           
            :required            when element set with required attribute
            :optional             when element is not having required attribute
            :in-range            when value is with in specified range
            :out-of-range        when value is not within the specified range.
            :valid            on validation pass
            :invalid            on validation fail
   
Note: "required" class is just to verify weather the attribute is defined or not.
      "required" satisfied on not is verified by using "invalid & valid" class.

       Input elements can use "placeholder" class for configuring placeholder effects.

            ::placeholder        

Syntax:
        input :: placeholder {

            // styles

        }    

                        Multimedia

24/04
=====

Multimedia Elements
- Multimedia refers to animation, audio and video content.
- HTML provides elements for handling multimedia

    a) <marquee>        [ obsolete - deprecated ]
    b) <audio>
    c) <video>
    d) <embed>         [ obsolete for video & audio ]

Marquee:
- It sets scrolling and sliding content in page.
- You can control speed, direction and style.

Syntax:
    <marquee>    ... your content ... </marquee>

Attributes:
   
 1. scrollamount        : It controls marquee scrolling speed from 1 to 100.
 2. direction            : You can set scrolling direction left, right, up & down.
 3. behavior            : It changes the scrolling to sliding using "alternate" as value.
 4. width & height        : It sets width and height for marquee area.
 5. bgcolor            : It sets background color for marquee area
 6. loop                : It specifies the number of times to display.

Syntax:
    <marquee  scrollamount="20" loop="3" direction="right" width="400" bgcolor="yellow">

        .... your content ....
        </marquee>

    <marquee behavior="alternate"> </marquee>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <marquee scrollamount="20" loop="3" bgcolor="yellow">
        Summer Sale Stars 1<sup>st</sup> May 2025 <img width="50" height="50" src="./images/iphone-white.jpg">
    </marquee>
</body>
</html>

Video & Audio:
- HTML supports video of type
    a) avi
    b) mp4
    c) mkv
    d) mov
    e) ogg etc..
- HTML support audio of type
    a) mp3
    b) wav
    c) midi etc..
- It is not recommended to embed them directly into page in modern web designing.
- You can upload into any podcasting site and embed its content into your page.

Syntax:
    <audio src=""  width="" height="" controls  poster="" autoplay> </audio>
    <video src=""  .... > </video>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
   <video src="./videos/js-class.mp4" poster="./images/data sci.png" controls width="300" height="200"></video>
</body>
</html>

25/04
=====

1. Inline
2. Embedded
    - Where to embed
    - Can we have multiple style containers
    - If multiple are defined then how priority works.
    - MIME type
    - Media

3. External File
- You can configure styles in a separate style sheet.
- It can cascade over HTML.
- Hence they are known as Cascading Style Sheets.
- You can implement styles across pages.
- Using an external style sheet will increase the number of requests for a page, which increases the page load time.

Ex:
1. Add a new style sheet into   "src/styles/home.css"

2. style attributes are directly defined as style object.

        h1
        {
          color: red;
        }

3. Link the style sheet to your HTML page.

    <link rel="stylesheet"  href="../src/styles/home.css">

Ex:
home.css

.ticket {
    background-color: yellow;
    padding: 20px;
    border:4px double red;
}
dt {
    font-weight: bold;
    background-color: red;
    color:white;
    width: 200px;
}

home.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../src/styles/home.css">
</head>
<body>
   <div class="ticket">
        <h2>Your Ticket</h2>
        <aside>
            <img src="./images/a1.jpg" width="100" height="100">
        </aside>
        <dl>
            <dt>Departure</dt>
            <dd>Hyderabad</dd>
            <dt>Arrival</dt>
            <dd>Delhi</dd>
            <dt>Date</dt>
            <dd>25-April-2025</dd>
        </dl>
        <button onclick="window.print()">Print Ticket</button>
   </div>
</body>
</html>

FAQ: If styles are defined using all three techniques the which set of styles will apply?
Ans:
        1st Priority        Inline
        2nd Priority        Depends on which one is last configured.

      If same attribute is defined, then it uses priority.
      If different attributes are defined then all will apply.


FAQ: What is minification?
Ans:  Minification is a coding technique followed by developers to reduce the file size.

      It is the process of removing optional code snippets, line breaks, blank spaces
      and using all possible shortcuts to implement functionality.

      https://www.toptal.com/developers/cssminifier

FAQ: What is difference between uncompressed and minified?
Ans :  Uncompressed is heavy and occupies more memory.
       Minified is light weight and faster in render.

       Uncompressed is good for Development environment.
       Minified is good for Production environment. [ Go Live ]

Ex:
1. Copy your actual CSS code

2. Go to the minifier website  " https://www.toptal.com/developers/cssminifier "

3. Paste the actual code

4. Click Minify button

5. Copy the minified code

6. Go to your project and add  a new file  "home.min.css"

7. Paste minified code

8. Link the minified file to your page.

    <link rel="stylesheet" href="../src/styles/home.min.css">


                            CSS Selectors

- Selectors are required when you are configuring styles embedded or in external file.
- They are used to select your HTML elements to apply specified styles.

Syntax:    
        <h1 style="color:red">          without a selector

        <style>
            selector
           {
             color: red;
           }
        </style>

- CSS provides various types of selectors to select HTML elements.
- Officially CSS doesn't provide any set of categories for selectors however the popularly known categories in developers community are

    1. Primary Selectors
    2. Relational or Rational Selectors
    3. Attribute Selectors
    4. Dynamic Pseudo Classes
    5. Structural Classes
    6. Element State Classes
    7. Validation State classes
    8. Universal Selector
    9. Root Selector
    10. Language Selector etc..


Primary Selectors:
1. Type Selector
2. ID Selector
3. Class Selector

Type Selector:
- It refers to the element name.
- It configures styles to every occurrence of element in page.
- You can't ignore styles for any specific occurrence.

Syntax:
        h1, p, div, span {

        }

ID Selector:
- Every element can have a reference ID.
- CSS can access the ID and configure styles.
- You can choose elements that have to use the specified styles.

Syntax:
          #text-style
          {
         color: red;
          }

         <h1  id="text-style">
         <p id="text-style">
         <div id="text-style">

- Every element can have only one ID reference.
- You can't define multiple categories styles to one element using ID selector.

Class Selector:
- Class is configure with a set of styles under reference name starting with "."
- Every element can implement multiple classes.
- You can apply multiple categories of styles for one element.

Syntax:
        .text-style {
   
        }
   
        <h2 class="text-style">

- Multiple classes a separated with space delimiter.

        <h2 class="class1 class2  class3 ..">

28/04
=====

Primary Selectors
- Type Selector
- ID
- Class

FAQ: If styles are defined using all three primary selectors, then which set will apply?
Ans:
        1st Priority        ID selector
        2nd                Class selector
        3rd                Type selector

       If different styles attributes are defined then all will apply.

FAQ: If ID selector is defined embedded and form external file, then which one will
     apply?

Ans: Which ever style is latest that will apply. LIFO [Last In-First Out]

2. Rational / Relational Selectors

        Child selector            parent  child {  }
        Direct Child Selector    parent > child { }
        Adjacent Selector        parent + adjacent { }
        All Siblings             parent ~ sibling { }



  - Child selector applies styles to all child elements at level of hierarchy inside parent.
 
         .container  p {  }

   - Direct child applies styles to only direct elements not any nested element.

        .container > p {  }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
   
    <style>
        .container > p {
            color:red;
        }
    </style>

</head>
<body>
    <div class="container">
        <p>Para-1</p>
        <p>Para-2</p>
        <div><p>Para-3</p></div>
        <p>Para-4</p>
    </div>
</body>
</html>

 - Adjacent select immediately after the specified
            parent + adj { }

 - Siblings select all occurrences after the specified but within specified scope.
            parent ~ sibling { }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
   
    <style>
        h1~p {
            color:red;
        }
    </style>

</head>
<body>
    <div>
        <h1>Heading</h1>
        <p>Para-1</p>
        <p>Para-2</p>
        <p>Para-3</p>
        <p>Para-4</p>
        <p>Para-5</p>
    </div>  
    <p>Para-6</p>
</body>
</html>

3. Attribute Selectors
- It allows to select element based on attributes and their value.
- You can select by only attribute or by using both attribute & value.

Syntax: Verifying only attribute
   
            token[attribute]       only attribute

Syntax:  Verifying both attribute & value

            token[attribute=value]

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
   
    <style>
        input[type="button"] {
            background-color: yellow;
        }
       
    </style>

</head>
<body>
    <form>
        <dl>
            <dt>User Name</dt>
            <dd><input type="text"></dd>
            <dt>Mobile</dt>
            <dd><input type="text"></dd>
        </dl>
        <input type="button" value="Submit">
        <input type="button" value="Cancel">
    </form>
</body>
</html>
       
EX:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        p[id] {
            color:red;
        }        
    </style>
</head>
<body>
    <p id>Para-1</p>
    <p>Para-2</p>
    <p id="p3">Para-3</p>
    <p>Para-4</p>
    <p id="p5">Para-5</p>
    <p>Para-6</p>

</body>
</html>

Attribute Conditions:

            [attribute=value]        exact match
            [attribute^=value]        starts with
            [attribute$=value]        ends with
            [attribute|=value]        must start with specified and can have "-"
                                delimiter when defined with others.
            [attribute~=value]        any occurrence separated with blank space.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        p[class~="Effects"] {
            color:red;
        }        
    </style>
</head>
<body>
    <p class="Effects">Para-1</p>
    <p class="ParaEffects">Para-2</p>
    <p class="Para-Effects">Para-3</p>
    <p class="Effects-Para">Para-4</p>
    <p class="Para Effects Text">Para-5</p>
    <p class="Text Para Effects">Para-6</p>
    <p class="Effects Para">Para-7</p>
    <p class="Para Effects">Para-8</p>

</body>
</html>

Note: You have group the selectors.
      CSS will not allow to group attributes.

Syntax:
        select[size], select[multiple]
        {
        }

        select[size, multiple]        // invalid
        {
        }

        p, h1, div {                // selects all to define same style

        }

        p, .bg-style, #text-style        // select all specified
        {
        }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       select[size], select[multiple] {
           font-size: 20px;
           background-color: yellow;
       }
    </style>
</head>
<body>
   <select>
    <option>Delhi</option>
    <option>Hyd</option>
   </select>
   <select size="2">
    <option>Delhi</option>
    <option>Hyd</option>
   </select>
   <select multiple>
    <option>Delhi</option>
    <option>Hyd</option>
   </select>
</body>
</html>

4. Structural Pseudo Classes

        :first-child                    first child element
        :last-child                    last child element
        :nth-child()                specific child or even & odd occurrences
        :nth-of-type()                It can configure every nth-occurrence from start
        :nth-last-of-type()            It can configure every nth from end.

Syntax:
    li : nth-child(3) { }            3rd element
    li : nth-child(even){ }        all even occurrences
    li : nth-of-type(3n){ }        every third start from top 3rd.
    li : nth-of-type(3n+2){ }        every third starting from top 2nd.
    li : nth-last-of-type(3n+2){}    every third starting from bottom 2nd.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       ul {
        list-style: none;
       }
       li {
         width: 100px;
         border:1px solid gray;
         padding: 5px;
         margin-top: 10px;
         margin-bottom: 10px;
       }
       li:nth-last-of-type(3n+2) {
          background-color: yellow;
       }
     
    </style>
</head>
<body>
   <ul>
      <li>Item-1</li>
      <li>Item-2</li>
      <li>Item-3</li>
      <li>Item-4</li>
      <li>Item-5</li>
      <li>Item-6</li>
      <li>Item-7</li>
      <li>Item-8</li>
      <li>Item-9</li>
      <li>Item-10</li>
   </ul>
</body>
</html>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        tbody tr:nth-child(even){
            background-color: rgb(144, 224, 144);
        }
        tbody tr:nth-child(odd){
            background-color: rgb(217, 252, 217);
        }
        thead, tfoot tr {
            background-color: green;
            color:white;
        }
    </style>
</head>
<body>
    <table border="1" width="100%">
        <thead>
            <tr>
                <th colspan="2">Name</th>
                <th colspan="3">Address</th>
            </tr>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>City</th>
                <th>State</th>
                <th>Postal Code</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td rowspan="7" align="center"> D<br>E<br>L<br>H<br>I </td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <td colspan="5" align="center">&copy; copyright 2025</td>
            </tr>
        </tfoot>
    </table>
</body>
</html>

5. Dynamic Element State Classes
6. Validation State Classes
7. Behavioral and occurrence classes

        ::first-letter
        ::first-line
        ::before
        ::after
        ::placeholder
        ::selection

CSS Units, CSS Colors, Inheritance, Rules

29/04
=====

8. Universal Selector
 - It is used to select all elements in page.

        * {

        }

- "*" is a meta character that refers to zero or more occurrences of element.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        * {
            font-family: Arial;
        }
    </style>
</head>
<body>
    <h1>Heading</h1>
    <p>Para</p>
    <div>Div</div>
    <span>Span</span>
    <input type="checkbox"> <label>Checkbox</label>
</body>
</html>


9. Root Selector
- It is used to select the root element in shadow DOM.

Syntax:
        :root {
              // styles
        }

10. Language Selector
- It is used to configure styles based on language.
- It is applicable to multilingual pages.

Syntax:
    :lang("name")
    {
       // styles
    }

Summary
- CSS Integration
- CSS Selectors
- CSS Rules

                           CSS Inheritance

- Inheritance is a mechanism where the child elements implements some of the parent features.
- You can control the inheritance by using following CSS values

        a) inherit
        b) initial
        c) unset

- "inherit" implements the parent styles.
- "initial"  ignores the parent styles.
- "unset" ignores or removes the default styles.

Syntax:
        child {
            attribute : inherit;
            attribute: initial;            
            attribute: unset;
        }

        child {
            all : inherit | initial | unset;
        }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .container {
            border: 3px double red;
            padding: 20px;
            color:red;
        }
        h1 {
            border:inherit;
            padding: inherit;
            color:initial;
            font-weight: unset;
        }
    </style>
</head>
<body>
    <div class="container">
         Container Text
         <h1>Welcome</h1>
    </div>
</body>
</html>

                              CSS Colors
- CSS can configure colors using
    1. color name
    2. shade name
    3. hexadecimal
    4. rgb()
    5. rgba()
    6. hsl()
    7. hsla()
    8. linear-gradient ]
    9. radial-gradient ]   background-image

                            CSS Units
- Units are requires for measurement.
- You can control the size, orientation and location using units.
- CSS units are categorized into 2 types
    a) Absolute Units
    b) Relative Units

- Absolute units doesn't depend on other elements in page.
- CSS absolute units are
    cm
    mm
    Q
    in
    pc
    pt
    px
   
- Relative units depend on relative elements like parent, root or adjacent etc.
- CSS relative units are

    a) em  [element]
    b) rem [root element]
    c) %
    d) vh  [viewport height]
    e) vw [viewport width]

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .container {
            font-size: 40px;
            border: 1px solid black;
            padding: 10px;
        }
        .msg {
            font-size: 0.5em;
        }
        .body-msg {
            font-size: 0.5rem;
        }
    </style>
</head>
<body>
    body text
    <div class="container">
        Container text  
        <div class="msg">Div in container</div>
        <div class="body-msg">Body relative text</div>
    </div>
</body>
</html>

Note: "em & rem" are used relative to chars size, and not the container size.
       You have to use "%" that sets by ratio of parent.

Syntax:
     .child {
        width : 50%;
        height: 50%;
      }

Note: "vh & vw" depends on the current view port height and width.
       Viewport refers to device screen height and width.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .parent {
            width: 200px;
            height: 200px;
            border: 3px solid red;
            padding: 10px;
        }
        .child {
            border:2px dotted blue;
            height: 50vh;
            width: 50vw;
        }
    </style>
</head>
<body>
   <div class="parent">
     <div class="child">

     </div>
   </div>
</body>
</html>

Summary
- CSS Integration
- CSS Selectors
- CSS Units
- CSS Colors
- CSS Rules
- CSS Inheritance


                        CSS Box Model
1. Margins
2. Padding
3. Border
4. Border Radius
5. Width
6. Height

Margin Shorthand

        margin:  top  right  bottom left ;

        {
          margin: 20px 0px 20px 0px;
        }

        {
          margin : 20px;
        }

Padding Shorthand

        padding: top  right  bottom left;

        {
          padding : 20px 0px 20px 0px;
        }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       .parent {
        border: 4px solid black;
        margin : 100px 50px 0px 50px;
        padding: 40px 0px 40px 0px;
       }
    </style>
</head>
<body>
   <div class="parent">
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem libero deserunt deleniti nihil dolorem nesciunt quam quaerat quisquam exercitationem itaque, consequuntur nam enim expedita quasi voluptatibus harum fugiat tempora suscipit?
        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Explicabo similique, praesentium unde cupiditate aliquam blanditiis alias, earum accusantium itaque veniam iusto architecto officiis, reprehenderit iure labore sit at dolore soluta.
        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quisquam, alias error aut laudantium perferendis quia delectus obcaecati consequuntur sit, dolor omnis reprehenderit optio voluptatum! Quas temporibus reprehenderit minima magni quasi.
   </div>
</body>
</html>

30/05
=====

CSS Box Model
1. Margins
2. Padding
3. Border
4. Border Radius
5. Width
6. Height
7. Border Image

Border Styles:
       
        border        : short hand for style, size and color
        border-style    : double, dotted, solid, groove, dashed ..
        border-width    : size in pixels  or other units
        border-color    : any CSS color

        border-left    : short hand for left
        border-left-style
        border-left-width
        border-left-color
        ... similarly for other directions...

Border Radius:

        border-radius    :  all directions
        border-top-left-radius
        border-top-right-radius
        border-bottom-left-radius
        border-bottom-right-radius

Border Image:

        border-image  :  It sets URL, offset and style.
                       Style can be stretch or space.
                       Offset can be a value between 1 to 100.

Note: You can apply border image, only when border is set.

Syntax:
        {
         border : 10px solid transparent;
         border-image: url("path")  stretch | space  70;
        }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       .parent {
         border : 20px solid transparent;
        border-image: url("../public/images/border.gif") stretch 80;
        padding: 30px;
       }
    </style>
</head>
<body>
   <div class="parent">
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem libero deserunt deleniti nihil dolorem nesciunt quam quaerat quisquam exercitationem itaque, consequuntur nam enim expedita quasi voluptatibus harum fugiat tempora suscipit?
        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Explicabo similique, praesentium unde cupiditate aliquam blanditiis alias, earum accusantium itaque veniam iusto architecto officiis, reprehenderit iure labore sit at dolore soluta.
        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quisquam, alias error aut laudantium perferendis quia delectus obcaecati consequuntur sit, dolor omnis reprehenderit optio voluptatum! Quas temporibus reprehenderit minima magni quasi.
   </div>
</body>
</html>
       
                         CSS Positions
1. Static
2. Absolute
3. Relative
4. Fixed
5. Sticky

Static
- It keeps element according to normal flow of document.
- It will not allow element to move using top, left, right & bottom attributes.
- It is the default position for element.

Absolute:
- It removes element from normal flow of document.
- It allows to move element using left, right, top and bottom.
- It keeps element with regard to content in page.
- It moves along with the content.

Fixed:
- It removes element from normal flow of document.
- It allows to move element using left, right, top and bottom.
- It keeps element with regard to browser window not with content in page.

Sticky
- It keeps element according to normal flow of document.
- It allows to scroll up to specified units, and can lock scrolling after reaching the designated position.

Relative
- It is defined for parent element.
- It allows to keep child element with regard to the parent.
- It requires child elements configured with "absolute" position only.

Syntax:
    .parent {
       position : relative;
     }
    .child {
        position : absolute;
     }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Document</title>
   <style>
      .men-fashion {
         background-image: url("../public/images/men-fashion.jpg");
         background-size: cover;
         width: 600px;
         height: 400px;
         border:1px solid blue;
         position: relative;
      }
      .offer{
         background-color: red;
         color:white;
         width: 80px;
         height: 80px;
         border-radius: 80px;
         text-align: center;
         padding: 10px;
         font-size: 28px;
         font-weight: bold;
         position: absolute;
         top: 20px;
         right: 20px;
      }
      nav {
         margin: 30px 0px 30px 0px;
      }
      button {
         font-size: 25px;
         padding: 10px;
         position: relative;
         border:none;
         background-color: yellow;
         border-radius: 10px;
      }
      .badge {
         display: inline-block;
         width: 15px;
         height: 15px;
         background-color: red;
         color:white;
         padding: 5px;
         font-size: 12px;
         border-radius: 20px;
         position: absolute;
         top: -10px;
         right: -10px;
      }
   </style>
   <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
</head>
<body>
   <nav>
      <button class="bi bi-cart4"> <span class="badge">2</span> </button>
   </nav>
   <div class="men-fashion">
      <div class="offer">Save<br>40%</div>
   </div>
</body>
</html>

                            CSS Z-Index

- It is used to control the overlapping elements.
- It can send back or backward.
- It can bring front or forward.
- Index starts with "0" which refers to element at bottom.

Syntax:
       {
         z-index: 0;
       }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Document</title>
   <style>
      .women-fashion {
         background-image: url("../public/images/women-fashion.jpg");
         background-size: cover;
         width: 500px;
         height: 300px;
         z-index: 0;
      }
      .men-fashion {
         background-image: url("../public/images/men-fashion.jpg");
         background-size: cover;
         width: 400px;
         height: 200px;
         top: 150px;
         left: 400px;
         z-index: 2;
      }
      .kids-fashion {
         background-image: url("../public/images/kids-fashion.jpg");
         background-size: cover;
         width: 300px;
         height: 200px;
         left: 300px;
         top: 0px;
         z-index: 1;
      }
      div {
         box-shadow: 5px 5px 2px black;
         border-radius: 20px;
         position: absolute;
         transition: 5s;
      }
      div:hover {
         z-index: 2;
         left: 600px;
         transition: 5s;
      }
   </style>
</head>
<body>
   <div class="women-fashion">

   </div>
   <div class="men-fashion">

   </div>
   <div class="kids-fashion">

   </div>
</body>
</html>

                           CSS Display

1. none            : It hides the element and removes allocated space from page.

FAQ: To hide element in page we can use "visibility: hidden", then what is difference between display & visibility ?
Ans:  Visibility will hide element without removing the allocated space.
      Display will hide element and remove allocated space.

2. block            : It transforms an inline element into block level element.

3. inline            : It transforms an block level element into inline element.

4. inline-block        : It keeps element in same line and configures block style to
                  defines various styles.

Note: Few elements can't adapt the styles if they are not block level.
      Hence you have to define "inline-block".

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Document</title>
   <style>
      span {
         display:inline-block;
         background-color: yellow;
         width: 100px;
         text-align: center;
      }
      div {
         display: inline;
      }
   </style>
</head>
<body>
    <div>Welcome</div> to CSS.
    <span>Home</span> Welcome to Home Page.
</body>
</html>

5. flex
